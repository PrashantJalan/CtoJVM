
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'l3\x8eqJ\xc3m\xc6\x06\xb3\xc6\x11+M\x9b?'
    
_lr_action_items = {'EQ_OP':([31,34,36,39,40,41,43,46,49,50,52,53,54,58,61,68,69,70,71,72,76,77,81,82,83,84,90,91,92,93,97,98,105,124,127,128,129,130,131,132,135,136,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,172,],[-61,-83,-84,-52,-81,-80,-51,-50,-48,-79,-82,-85,-47,-49,118,118,-104,-103,-102,-101,-100,-99,-58,-59,-60,-57,-55,-56,-53,-54,-98,-97,118,-63,118,118,118,118,118,118,118,118,118,118,118,118,118,-78,-75,-69,-71,-70,118,-74,-66,-73,-68,-67,-72,118,-62,-105,118,]),'SHORT':([0,9,10,11,12,18,19,26,27,29,32,45,48,60,62,63,67,106,107,108,109,112,123,126,134,161,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[2,-3,-5,-4,2,-2,2,-7,2,2,-34,-64,-25,2,-6,2,-39,-38,-37,-23,-24,-65,2,-40,-41,-22,2,2,-36,2,-27,2,2,2,2,2,-35,-33,2,-28,2,-26,2,2,2,-32,-30,-29,2,2,-31,]),'RETURN':([27,32,45,48,60,63,67,106,107,109,112,123,126,134,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[33,-34,-64,-25,33,33,-39,-38,-37,-24,-65,33,-40,-41,33,33,-36,33,-27,33,33,33,33,33,-35,-33,33,-28,33,-26,33,33,33,-32,-30,-29,33,33,-31,]),'DEC_OP':([27,31,32,33,41,45,48,50,56,60,63,67,73,74,75,78,79,80,94,95,99,100,101,102,103,104,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,134,146,162,163,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[35,-61,-34,35,76,-64,-25,97,35,35,35,-39,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-38,-37,-24,35,35,-65,35,35,35,35,35,35,35,35,35,35,35,-63,-40,-41,35,-62,35,35,35,-36,35,-27,35,35,35,35,35,-35,-33,35,-28,35,-26,35,35,35,-32,-30,-29,35,35,-31,]),'VOID':([0,9,10,11,12,18,26,62,108,161,],[3,-3,-5,-4,3,-2,-7,-6,-23,-22,]),'CHARACTER':([27,32,33,45,48,56,60,63,67,73,74,75,78,79,80,94,95,96,99,100,101,102,103,104,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,134,146,163,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[46,-34,46,-64,-25,46,46,46,-39,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-38,-37,-24,46,46,-65,46,46,46,46,46,46,46,46,46,46,46,-40,-41,46,46,46,46,46,-36,46,-27,46,46,46,46,46,-35,-33,46,-28,46,-26,46,46,46,-32,-30,-29,46,46,-31,]),'EQUAL':([31,41,50,89,124,162,],[-61,78,99,99,-63,-62,]),'OR_OP':([31,34,36,39,40,41,43,46,49,50,52,53,54,58,61,68,69,70,71,72,76,77,81,82,83,84,90,91,92,93,97,98,105,124,127,128,129,130,131,132,135,136,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,172,],[-61,-83,-84,-52,-81,-80,-51,-50,-48,-79,-82,-85,-47,-49,122,122,-104,-103,-102,-101,-100,-99,-58,-59,-60,-57,-55,-56,-53,-54,-98,-97,122,-63,122,122,122,122,122,122,122,122,122,122,122,122,122,-78,-75,-69,-71,-70,-76,-74,-66,-73,-68,-67,-72,-77,-62,-105,122,]),'CHAR':([0,9,10,11,12,18,19,26,27,29,32,45,48,60,62,63,67,106,107,108,109,112,123,126,134,161,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[4,-3,-5,-4,4,-2,4,-7,4,4,-34,-64,-25,4,-6,4,-39,-38,-37,-23,-24,-65,4,-40,-41,-22,4,4,-36,4,-27,4,4,4,4,4,-35,-33,4,-28,4,-26,4,4,4,-32,-30,-29,4,4,-31,]),'WHILE':([27,32,45,48,60,63,67,106,107,109,112,123,126,134,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[38,-34,-64,-25,38,38,-39,-38,-37,-24,-65,38,-40,-41,38,38,-36,38,-27,38,38,38,38,38,-35,-33,38,-28,38,-26,38,38,38,-32,-30,-29,38,38,-31,]),'REAL_NUM':([27,32,33,42,45,47,48,56,60,63,67,73,74,75,78,79,80,94,95,96,99,100,101,102,103,104,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,134,146,163,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[49,-34,49,81,-64,93,-25,49,49,49,-39,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-38,-37,-24,49,49,-65,49,49,49,49,49,49,49,49,49,49,49,-40,-41,49,49,49,49,49,-36,49,-27,49,49,49,49,49,-35,-33,49,-28,49,-26,49,49,49,-32,-30,-29,49,49,-31,]),'EXP_NUM':([27,32,33,42,45,47,48,56,60,63,67,73,74,75,78,79,80,94,95,96,99,100,101,102,103,104,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,134,146,163,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[39,-34,39,83,-64,91,-25,39,39,39,-39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-38,-37,-24,39,39,-65,39,39,39,39,39,39,39,39,39,39,39,-40,-41,39,39,39,39,39,-36,39,-27,39,39,39,39,39,-35,-33,39,-28,39,-26,39,39,39,-32,-30,-29,39,39,-31,]),'MULTIPLY':([31,34,36,39,40,41,43,46,49,50,52,53,54,58,61,68,69,70,71,72,76,77,81,82,83,84,90,91,92,93,97,98,105,124,127,128,129,130,131,132,135,136,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,172,],[-61,-83,-84,-52,-81,-80,-51,-50,-48,-79,-82,-85,-47,-49,119,119,-104,-103,-102,-101,-100,-99,-58,-59,-60,-57,-55,-56,-53,-54,-98,-97,119,-63,119,119,119,119,119,119,119,119,119,119,119,119,119,-78,119,-69,119,119,119,119,119,119,-68,119,119,119,-62,-105,119,]),'MINUS':([27,31,32,33,34,36,39,40,41,43,45,46,48,49,50,52,53,54,56,58,60,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[42,-61,-34,42,-83,-84,-52,-81,-80,-51,-64,-50,-25,-48,-79,-82,-85,-47,42,-49,42,120,42,-39,120,-104,-103,-102,-101,42,42,42,-100,-99,42,42,42,-58,-59,-60,-57,-55,-56,-53,-54,42,42,42,-98,-97,42,42,42,42,42,42,120,-38,-37,-24,42,42,-65,42,42,42,42,42,42,42,42,42,42,42,-63,-40,120,120,120,120,120,120,-41,120,120,120,120,120,120,42,120,-78,120,-69,120,120,120,120,-66,120,-68,-67,120,120,-62,42,-105,42,42,42,-36,42,120,-27,42,42,42,42,42,-35,-33,42,-28,42,-26,42,42,42,-32,-30,-29,42,42,-31,]),'DIVIDE':([31,34,36,39,40,41,43,46,49,50,52,53,54,58,61,68,69,70,71,72,76,77,81,82,83,84,90,91,92,93,97,98,105,124,127,128,129,130,131,132,135,136,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,172,],[-61,-83,-84,-52,-81,-80,-51,-50,-48,-79,-82,-85,-47,-49,111,111,-104,-103,-102,-101,-100,-99,-58,-59,-60,-57,-55,-56,-53,-54,-98,-97,111,-63,111,111,111,111,111,111,111,111,111,111,111,111,111,-78,111,-69,111,111,111,111,111,111,-68,111,111,111,-62,-105,111,]),'LE_OP':([31,34,36,39,40,41,43,46,49,50,52,53,54,58,61,68,69,70,71,72,76,77,81,82,83,84,90,91,92,93,97,98,105,124,127,128,129,130,131,132,135,136,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,172,],[-61,-83,-84,-52,-81,-80,-51,-50,-48,-79,-82,-85,-47,-49,110,110,-104,-103,-102,-101,-100,-99,-58,-59,-60,-57,-55,-56,-53,-54,-98,-97,110,-63,110,110,110,110,110,110,110,110,110,110,110,110,110,-78,-75,-69,-71,-70,110,-74,-66,110,-68,-67,110,110,-62,-105,110,]),'SEMICOLON':([22,27,28,31,32,33,34,36,39,40,41,43,45,46,48,49,50,52,53,54,57,58,59,60,61,63,67,68,69,70,71,72,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,103,106,107,109,112,123,124,126,128,129,130,131,132,134,135,136,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[26,45,62,-61,-34,67,-83,-84,-52,-81,-80,-51,-64,-50,-25,-48,-79,-82,-85,-47,106,-49,107,45,112,45,-39,126,-104,-103,-102,-101,-100,-99,-58,-59,-60,-57,134,-46,-42,-45,-44,-55,-56,-53,-54,-98,-97,45,-38,-37,-24,-65,45,-63,-40,-94,-96,-87,-95,-93,-41,-89,-92,-86,-91,-90,-88,45,-78,-75,-69,-71,-70,-76,-74,-66,-73,-68,-67,-72,-77,-62,45,-43,-105,45,-36,45,-27,45,45,45,45,45,-35,-33,45,-28,45,-26,45,45,45,-32,-30,-29,45,45,-31,]),'G_OP':([31,34,36,39,40,41,43,46,49,50,52,53,54,58,61,68,69,70,71,72,76,77,81,82,83,84,90,91,92,93,97,98,105,124,127,128,129,130,131,132,135,136,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,172,],[-61,-83,-84,-52,-81,-80,-51,-50,-48,-79,-82,-85,-47,-49,113,113,-104,-103,-102,-101,-100,-99,-58,-59,-60,-57,-55,-56,-53,-54,-98,-97,113,-63,113,113,113,113,113,113,113,113,113,113,113,113,113,-78,-75,-69,-71,-70,113,-74,-66,113,-68,-67,113,113,-62,-105,113,]),'LEFT_SQUARE':([24,31,50,70,72,89,124,141,162,],[30,66,30,30,30,30,-63,30,-62,]),'UNSIGNED':([0,9,10,11,12,18,19,26,27,29,32,45,48,60,62,63,67,106,107,108,109,112,123,126,134,161,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[6,-3,-5,-4,6,-2,6,-7,6,6,-34,-64,-25,6,-6,6,-39,-38,-37,-23,-24,-65,6,-40,-41,-22,6,6,-36,6,-27,6,6,6,6,6,-35,-33,6,-28,6,-26,6,6,6,-32,-30,-29,6,6,-31,]),'LONG':([0,9,10,11,12,18,19,26,27,29,32,45,48,60,62,63,67,106,107,108,109,112,123,126,134,161,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[7,-3,-5,-4,7,-2,7,-7,7,7,-34,-64,-25,7,-6,7,-39,-38,-37,-23,-24,-65,7,-40,-41,-22,7,7,-36,7,-27,7,7,7,7,7,-35,-33,7,-28,7,-26,7,7,7,-32,-30,-29,7,7,-31,]),'L_OP':([31,34,36,39,40,41,43,46,49,50,52,53,54,58,61,68,69,70,71,72,76,77,81,82,83,84,90,91,92,93,97,98,105,124,127,128,129,130,131,132,135,136,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,172,],[-61,-83,-84,-52,-81,-80,-51,-50,-48,-79,-82,-85,-47,-49,114,114,-104,-103,-102,-101,-100,-99,-58,-59,-60,-57,-55,-56,-53,-54,-98,-97,114,-63,114,114,114,114,114,114,114,114,114,114,114,114,114,-78,-75,-69,-71,-70,114,-74,-66,114,-68,-67,114,114,-62,-105,114,]),'COMMA':([21,23,24,25,31,34,36,39,40,41,43,46,49,50,52,53,54,58,64,69,70,71,72,76,77,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,124,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,158,159,160,162,164,165,171,],[-18,29,-20,-21,-61,-83,-84,-52,-81,-80,-51,-50,-48,-79,-82,-85,-47,-49,-19,-104,-103,-102,-101,-100,-99,-58,-59,-60,-57,133,-46,-42,-45,-44,-55,-56,-53,-54,-98,-97,-63,-94,-96,-87,-95,-93,-89,-92,166,-106,-110,-109,-108,-86,-91,-90,-88,-78,-75,-69,-71,-70,-76,-74,-66,-73,-68,-67,-72,-77,-62,-43,-105,-107,]),'PLUS':([27,31,32,33,34,36,39,40,41,43,45,46,48,49,50,52,53,54,56,58,60,61,63,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,134,135,136,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[47,-61,-34,47,-83,-84,-52,-81,-80,-51,-64,-50,-25,-48,-79,-82,-85,-47,47,-49,47,117,47,-39,117,-104,-103,-102,-101,47,47,47,-100,-99,47,47,47,-58,-59,-60,-57,-55,-56,-53,-54,47,47,47,-98,-97,47,47,47,47,47,47,117,-38,-37,-24,47,47,-65,47,47,47,47,47,47,47,47,47,47,47,-63,-40,117,117,117,117,117,117,-41,117,117,117,117,117,117,47,117,-78,117,-69,117,117,117,117,-66,117,-68,-67,117,117,-62,47,-105,47,47,47,-36,47,117,-27,47,47,47,47,47,-35,-33,47,-28,47,-26,47,47,47,-32,-30,-29,47,47,-31,]),'IDENTIFIER':([1,2,3,4,5,6,7,13,14,15,16,20,27,32,33,35,37,44,45,48,56,60,63,67,73,74,75,78,79,80,94,95,96,99,100,101,102,103,104,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,133,134,146,163,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[17,-11,-9,-10,-8,-17,-13,-12,-15,-14,-16,24,50,-34,50,70,72,89,-64,-25,50,50,50,-39,50,50,50,50,50,50,50,50,141,50,50,50,50,50,50,-38,-37,-24,50,50,-65,50,50,50,50,50,50,50,50,50,50,50,-40,89,-41,50,50,141,50,50,-36,50,-27,50,50,50,50,50,-35,-33,50,-28,50,-26,50,50,50,-32,-30,-29,50,50,-31,]),'ADD_ASSIGN':([31,41,50,124,162,],[-61,80,102,-63,-62,]),'$end':([8,9,10,11,12,18,26,62,108,161,],[0,-3,-5,-4,-1,-2,-7,-6,-23,-22,]),'STRING':([27,32,33,45,48,56,60,63,67,73,74,75,78,79,80,94,95,96,99,100,101,102,103,104,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,134,146,163,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[43,-34,43,-64,-25,43,43,43,-39,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-38,-37,-24,43,43,-65,43,43,43,43,43,43,43,43,43,43,43,-40,-41,43,43,43,43,43,-36,43,-27,43,43,43,43,43,-35,-33,43,-28,43,-26,43,43,43,-32,-30,-29,43,43,-31,]),'FOR':([27,32,45,48,60,63,67,106,107,109,112,123,126,134,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[51,-34,-64,-25,51,51,-39,-38,-37,-24,-65,51,-40,-41,51,51,-36,51,-27,51,51,51,51,51,-35,-33,51,-28,51,-26,51,51,51,-32,-30,-29,51,51,-31,]),'RIGHT_ROUND':([19,21,23,24,25,31,34,36,39,40,41,43,46,49,50,52,53,54,58,64,69,70,71,72,76,77,81,82,83,84,90,91,92,93,97,98,105,124,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,171,172,],[22,-18,28,-20,-21,-61,-83,-84,-52,-81,-80,-51,-50,-48,-79,-82,-85,-47,-49,-19,-104,-103,-102,-101,-100,-99,-58,-59,-60,-57,-55,-56,-53,-54,-98,-97,148,-63,163,-94,-96,-87,-95,-93,-89,-92,165,-106,-110,-109,-108,-86,-91,-90,-88,168,-78,-75,-69,-71,-70,-76,-74,-66,-73,-68,-67,-72,-77,-62,-105,-107,176,]),'RIGHT_CURL':([32,45,48,60,67,106,107,109,112,123,126,134,169,173,175,178,179,180,182,184,185,186,188,189,190,192,193,],[-34,-64,-25,108,-39,-38,-37,-24,-65,161,-40,-41,-36,-27,179,184,-35,-33,-28,-26,188,189,-32,-30,-29,193,-31,]),'AND_OP':([31,34,36,39,40,41,43,46,49,50,52,53,54,58,61,68,69,70,71,72,76,77,81,82,83,84,90,91,92,93,97,98,105,124,127,128,129,130,131,132,135,136,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,172,],[-61,-83,-84,-52,-81,-80,-51,-50,-48,-79,-82,-85,-47,-49,115,115,-104,-103,-102,-101,-100,-99,-58,-59,-60,-57,-55,-56,-53,-54,-98,-97,115,-63,115,115,115,115,115,115,115,115,115,115,115,115,115,-78,-75,-69,-71,-70,-76,-74,-66,-73,-68,-67,-72,115,-62,-105,115,]),'GE_OP':([31,34,36,39,40,41,43,46,49,50,52,53,54,58,61,68,69,70,71,72,76,77,81,82,83,84,90,91,92,93,97,98,105,124,127,128,129,130,131,132,135,136,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,172,],[-61,-83,-84,-52,-81,-80,-51,-50,-48,-79,-82,-85,-47,-49,116,116,-104,-103,-102,-101,-100,-99,-58,-59,-60,-57,-55,-56,-53,-54,-98,-97,116,-63,116,116,116,116,116,116,116,116,116,116,116,116,116,-78,-75,-69,-71,-70,116,-74,-66,116,-68,-67,116,116,-62,-105,116,]),'ELSE':([32,45,67,106,107,112,126,134,169,173,179,180,182,184,188,189,190,193,],[-34,-64,-39,-38,-37,-65,-40,-41,-36,177,-35,-33,-28,187,-32,-30,-29,-31,]),'HEX_NUM':([27,32,33,42,45,47,48,56,60,63,67,73,74,75,78,79,80,94,95,96,99,100,101,102,103,104,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,134,146,163,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[54,-34,54,84,-64,92,-25,54,54,54,-39,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-38,-37,-24,54,54,-65,54,54,54,54,54,54,54,54,54,54,54,-40,-41,54,54,54,54,54,-36,54,-27,54,54,54,54,54,-35,-33,54,-28,54,-26,54,54,54,-32,-30,-29,54,54,-31,]),'IF':([27,32,45,48,60,63,67,106,107,109,112,123,126,134,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[55,-34,-64,-25,55,55,-39,-38,-37,-24,-65,55,-40,-41,55,55,-36,55,-27,55,55,55,55,55,-35,-33,55,-28,55,-26,55,55,55,-32,-30,-29,55,55,-31,]),'SUB_ASSIGN':([31,41,50,124,162,],[-61,74,94,-63,-62,]),'MOD_ASSIGN':([31,41,50,124,162,],[-61,75,95,-63,-62,]),'LEFT_ROUND':([17,27,32,33,38,45,48,50,51,55,56,60,63,67,73,74,75,78,79,80,94,95,99,100,101,102,103,104,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,134,146,163,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[19,56,-34,56,73,-64,-25,96,103,104,56,56,56,-39,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-38,-37,-24,56,56,-65,56,56,56,56,56,56,56,56,56,56,56,-40,-41,56,56,56,56,-36,56,-27,56,56,56,56,56,-35,-33,56,-28,56,-26,56,56,56,-32,-30,-29,56,56,-31,]),'INT':([0,9,10,11,12,18,19,26,27,29,32,45,48,60,62,63,67,106,107,108,109,112,123,126,134,161,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[13,-3,-5,-4,13,-2,13,-7,13,13,-34,-64,-25,13,-6,13,-39,-38,-37,-23,-24,-65,13,-40,-41,-22,13,13,-36,13,-27,13,13,13,13,13,-35,-33,13,-28,13,-26,13,13,13,-32,-30,-29,13,13,-31,]),'DOUBLE':([0,9,10,11,12,18,19,26,27,29,32,45,48,60,62,63,67,106,107,108,109,112,123,126,134,161,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[14,-3,-5,-4,14,-2,14,-7,14,14,-34,-64,-25,14,-6,14,-39,-38,-37,-23,-24,-65,14,-40,-41,-22,14,14,-36,14,-27,14,14,14,14,14,-35,-33,14,-28,14,-26,14,14,14,-32,-30,-29,14,14,-31,]),'FLOAT':([0,9,10,11,12,18,19,26,27,29,32,45,48,60,62,63,67,106,107,108,109,112,123,126,134,161,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[15,-3,-5,-4,15,-2,15,-7,15,15,-34,-64,-25,15,-6,15,-39,-38,-37,-23,-24,-65,15,-40,-41,-22,15,15,-36,15,-27,15,15,15,15,15,-35,-33,15,-28,15,-26,15,15,15,-32,-30,-29,15,15,-31,]),'RIGHT_SQUARE':([65,125,],[124,162,]),'LEFT_CURL':([22,28,163,168,176,177,187,],[27,63,170,174,181,183,191,]),'SIGNED':([0,9,10,11,12,18,19,26,27,29,32,45,48,60,62,63,67,106,107,108,109,112,123,126,134,161,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[16,-3,-5,-4,16,-2,16,-7,16,16,-34,-64,-25,16,-6,16,-39,-38,-37,-23,-24,-65,16,-40,-41,-22,16,16,-36,16,-27,16,16,16,16,16,-35,-33,16,-28,16,-26,16,16,16,-32,-30,-29,16,16,-31,]),'BREAK':([27,32,45,48,60,63,67,106,107,109,112,123,126,134,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[57,-34,-64,-25,57,57,-39,-38,-37,-24,-65,57,-40,-41,57,57,-36,57,-27,57,57,57,57,57,-35,-33,57,-28,57,-26,57,57,57,-32,-30,-29,57,57,-31,]),'INT_NUM':([27,30,32,33,42,45,47,48,56,60,63,66,67,73,74,75,78,79,80,94,95,96,99,100,101,102,103,104,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,134,146,163,166,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[58,65,-34,58,82,-64,90,-25,58,58,58,125,-39,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-38,-37,-24,58,58,-65,58,58,58,58,58,58,58,58,58,58,58,-40,-41,58,58,58,58,58,-36,58,-27,58,58,58,58,58,-35,-33,58,-28,58,-26,58,58,58,-32,-30,-29,58,58,-31,]),'CONTINUE':([27,32,45,48,60,63,67,106,107,109,112,123,126,134,163,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[59,-34,-64,-25,59,59,-39,-38,-37,-24,-65,59,-40,-41,59,59,-36,59,-27,59,59,59,59,59,-35,-33,59,-28,59,-26,59,59,59,-32,-30,-29,59,59,-31,]),'MUL_ASSIGN':([50,],[100,]),'INC_OP':([27,31,32,33,41,45,48,50,56,60,63,67,73,74,75,78,79,80,94,95,99,100,101,102,103,104,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,134,146,162,163,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,],[37,-61,-34,37,77,-64,-25,98,37,37,37,-39,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-38,-37,-24,37,37,-65,37,37,37,37,37,37,37,37,37,37,37,-63,-40,-41,37,-62,37,37,37,-36,37,-27,37,37,37,37,37,-35,-33,37,-28,37,-26,37,37,37,-32,-30,-29,37,37,-31,]),'NE_OP':([31,34,36,39,40,41,43,46,49,50,52,53,54,58,61,68,69,70,71,72,76,77,81,82,83,84,90,91,92,93,97,98,105,124,127,128,129,130,131,132,135,136,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,172,],[-61,-83,-84,-52,-81,-80,-51,-50,-48,-79,-82,-85,-47,-49,121,121,-104,-103,-102,-101,-100,-99,-58,-59,-60,-57,-55,-56,-53,-54,-98,-97,121,-63,121,121,121,121,121,121,121,121,121,121,121,121,121,-78,-75,-69,-71,-70,121,-74,-66,-73,-68,-67,-72,121,-62,-105,121,]),'DIV_ASSIGN':([31,41,50,124,162,],[-61,79,101,-63,-62,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([27,60,63,103,123,146,163,168,170,174,175,176,177,178,181,183,185,186,187,191,192,],[32,32,32,146,32,167,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'return_type_specifier':([0,12,],[1,1,]),'constant':([27,33,56,60,63,73,74,75,78,79,80,94,95,96,99,100,101,102,103,104,110,111,113,114,115,116,117,118,119,120,121,122,123,146,163,166,167,168,170,174,175,176,177,178,181,183,185,186,187,191,192,],[40,40,40,40,40,40,40,40,40,40,40,40,40,139,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,139,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'unary_expression':([27,33,56,60,63,73,74,75,78,79,80,94,95,99,100,101,102,103,104,110,111,113,114,115,116,117,118,119,120,121,122,123,146,163,167,168,170,174,175,176,177,178,181,183,185,186,187,191,192,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'argument':([19,29,],[21,64,]),'function_call':([27,33,56,60,63,73,74,75,78,79,80,94,95,99,100,101,102,103,104,110,111,113,114,115,116,117,118,119,120,121,122,123,146,163,167,168,170,174,175,176,177,178,181,183,185,186,187,191,192,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'array':([20,27,33,35,37,44,56,60,63,73,74,75,78,79,80,94,95,96,99,100,101,102,103,104,110,111,113,114,115,116,117,118,119,120,121,122,123,133,146,163,166,167,168,170,174,175,176,177,178,181,183,185,186,187,191,192,],[25,41,41,69,71,88,41,41,41,41,41,41,41,41,41,41,41,140,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,88,41,41,140,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'type_specifier':([0,12,19,27,29,60,63,123,163,168,170,174,175,176,177,178,181,183,185,186,187,191,192,],[5,5,20,44,20,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'function_call_list':([96,],[137,]),'program':([0,],[8,]),'array_index':([24,50,70,72,89,141,],[31,31,31,31,31,31,]),'statement':([27,60,63,123,163,168,170,174,175,176,177,178,181,183,185,186,187,191,192,],[48,109,48,109,169,173,48,48,109,180,182,109,48,48,109,109,190,48,109,]),'argument_list':([19,],[23,]),'function':([0,12,],[9,18,]),'assignment':([27,33,56,60,63,73,74,75,78,79,80,94,95,99,100,101,102,103,104,110,111,113,114,115,116,117,118,119,120,121,122,123,146,163,167,168,170,174,175,176,177,178,181,183,185,186,187,191,192,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'function_argument':([96,166,],[138,171,]),'equal_or_initialise':([27,33,44,56,60,63,73,74,75,78,79,80,94,95,99,100,101,102,103,104,110,111,113,114,115,116,117,118,119,120,121,122,123,133,146,163,167,168,170,174,175,176,177,178,181,183,185,186,187,191,192,],[53,53,86,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,86,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'declaration':([44,133,],[87,164,]),'function_definition':([0,12,],[10,10,]),'function_declaration':([0,12,],[11,11,]),'function_list':([0,],[12,]),'declaration_list':([44,],[85,]),'statement_list':([27,63,170,174,181,183,191,],[60,123,175,178,185,186,192,]),'expression':([27,33,56,60,63,73,74,75,78,79,80,94,95,99,100,101,102,103,104,110,111,113,114,115,116,117,118,119,120,121,122,123,146,163,167,168,170,174,175,176,177,178,181,183,185,186,187,191,192,],[61,68,105,61,61,127,128,129,130,131,132,135,136,142,143,144,145,61,147,149,150,151,152,153,154,155,156,157,158,159,160,61,61,61,172,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_list','program',1,'p_program','parser.py',103),
  ('function_list -> function_list function','function_list',2,'p_function_list_1','parser.py',107),
  ('function_list -> function','function_list',1,'p_function_list_2','parser.py',112),
  ('function -> function_declaration','function',1,'p_function_1','parser.py',116),
  ('function -> function_definition','function',1,'p_function_2','parser.py',120),
  ('function_declaration -> return_type_specifier IDENTIFIER LEFT_ROUND argument_list RIGHT_ROUND SEMICOLON','function_declaration',6,'p_function_declaration_1','parser.py',124),
  ('function_declaration -> return_type_specifier IDENTIFIER LEFT_ROUND RIGHT_ROUND SEMICOLON','function_declaration',5,'p_function_declaration_2','parser.py',128),
  ('return_type_specifier -> type_specifier','return_type_specifier',1,'p_return_type_specifier_1','parser.py',132),
  ('return_type_specifier -> VOID','return_type_specifier',1,'p_return_type_specifier_2','parser.py',136),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_1','parser.py',140),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_1','parser.py',141),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_1','parser.py',142),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_1','parser.py',143),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_1','parser.py',144),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_1','parser.py',145),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_1','parser.py',146),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_1','parser.py',147),
  ('argument_list -> argument','argument_list',1,'p_argument_list_1','parser.py',151),
  ('argument_list -> argument_list COMMA argument','argument_list',3,'p_argument_list_2','parser.py',155),
  ('argument -> type_specifier IDENTIFIER','argument',2,'p_argument_1','parser.py',160),
  ('argument -> type_specifier array','argument',2,'p_argument_2','parser.py',164),
  ('function_definition -> return_type_specifier IDENTIFIER LEFT_ROUND argument_list RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL','function_definition',8,'p_function_definition_1','parser.py',168),
  ('function_definition -> return_type_specifier IDENTIFIER LEFT_ROUND RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL','function_definition',7,'p_function_definition_2','parser.py',172),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','parser.py',176),
  ('statement_list -> statement','statement_list',1,'p_statement_list_2','parser.py',181),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL','statement',7,'p_statement_1','parser.py',185),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND statement','statement',5,'p_statement_2','parser.py',189),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND statement ELSE statement','statement',7,'p_statement_3','parser.py',193),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL ELSE statement','statement',9,'p_statement_4','parser.py',197),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND statement ELSE LEFT_CURL statement_list RIGHT_CURL','statement',9,'p_statement_5','parser.py',201),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL ELSE LEFT_CURL statement_list RIGHT_CURL','statement',11,'p_statement_6','parser.py',205),
  ('statement -> FOR LEFT_ROUND expression_statement expression_statement expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL','statement',9,'p_statement_7','parser.py',209),
  ('statement -> FOR LEFT_ROUND expression_statement expression_statement expression RIGHT_ROUND statement','statement',7,'p_statement_8','parser.py',213),
  ('statement -> expression_statement','statement',1,'p_statement_9','parser.py',217),
  ('statement -> WHILE LEFT_ROUND expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL','statement',7,'p_statement_10','parser.py',221),
  ('statement -> WHILE LEFT_ROUND expression RIGHT_ROUND statement','statement',5,'p_statement_11','parser.py',225),
  ('statement -> CONTINUE SEMICOLON','statement',2,'p_statement_12','parser.py',229),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement_12','parser.py',230),
  ('statement -> RETURN SEMICOLON','statement',2,'p_statement_12','parser.py',231),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statement_13','parser.py',235),
  ('statement -> type_specifier declaration_list SEMICOLON','statement',3,'p_statement_14','parser.py',239),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_1','parser.py',243),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list_2','parser.py',247),
  ('declaration -> IDENTIFIER','declaration',1,'p_declaration_1','parser.py',252),
  ('declaration -> array','declaration',1,'p_declaration_2','parser.py',256),
  ('declaration -> equal_or_initialise','declaration',1,'p_declaration_2','parser.py',257),
  ('constant -> HEX_NUM','constant',1,'p_constant_1','parser.py',261),
  ('constant -> REAL_NUM','constant',1,'p_constant_1','parser.py',262),
  ('constant -> INT_NUM','constant',1,'p_constant_1','parser.py',263),
  ('constant -> CHARACTER','constant',1,'p_constant_1','parser.py',264),
  ('constant -> STRING','constant',1,'p_constant_1','parser.py',265),
  ('constant -> EXP_NUM','constant',1,'p_constant_1','parser.py',266),
  ('constant -> PLUS HEX_NUM','constant',2,'p_constant_2','parser.py',270),
  ('constant -> PLUS REAL_NUM','constant',2,'p_constant_2','parser.py',271),
  ('constant -> PLUS INT_NUM','constant',2,'p_constant_2','parser.py',272),
  ('constant -> PLUS EXP_NUM','constant',2,'p_constant_2','parser.py',273),
  ('constant -> MINUS HEX_NUM','constant',2,'p_constant_3','parser.py',277),
  ('constant -> MINUS REAL_NUM','constant',2,'p_constant_3','parser.py',278),
  ('constant -> MINUS INT_NUM','constant',2,'p_constant_3','parser.py',279),
  ('constant -> MINUS EXP_NUM','constant',2,'p_constant_3','parser.py',280),
  ('array -> IDENTIFIER array_index','array',2,'p_array','parser.py',285),
  ('array_index -> array_index LEFT_SQUARE INT_NUM RIGHT_SQUARE','array_index',4,'p_array_index_1','parser.py',289),
  ('array_index -> LEFT_SQUARE INT_NUM RIGHT_SQUARE','array_index',3,'p_array_index_2','parser.py',294),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement_1','parser.py',298),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement_2','parser.py',302),
  ('expression -> expression PLUS expression','expression',3,'p_expression_1','parser.py',306),
  ('expression -> expression MINUS expression','expression',3,'p_expression_2','parser.py',310),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_3','parser.py',314),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_4','parser.py',318),
  ('expression -> expression L_OP expression','expression',3,'p_expression_5','parser.py',322),
  ('expression -> expression G_OP expression','expression',3,'p_expression_6','parser.py',326),
  ('expression -> expression NE_OP expression','expression',3,'p_expression_7','parser.py',330),
  ('expression -> expression EQ_OP expression','expression',3,'p_expression_8','parser.py',334),
  ('expression -> expression GE_OP expression','expression',3,'p_expression_9','parser.py',338),
  ('expression -> expression LE_OP expression','expression',3,'p_expression_10','parser.py',342),
  ('expression -> expression AND_OP expression','expression',3,'p_expression_11','parser.py',346),
  ('expression -> expression OR_OP expression','expression',3,'p_expression_12','parser.py',350),
  ('expression -> LEFT_ROUND expression RIGHT_ROUND','expression',3,'p_expression_13','parser.py',354),
  ('expression -> IDENTIFIER','expression',1,'p_expression_14','parser.py',358),
  ('expression -> array','expression',1,'p_expression_15','parser.py',362),
  ('expression -> constant','expression',1,'p_expression_15','parser.py',363),
  ('expression -> assignment','expression',1,'p_expression_16','parser.py',367),
  ('expression -> unary_expression','expression',1,'p_expression_16','parser.py',368),
  ('expression -> function_call','expression',1,'p_expression_16','parser.py',369),
  ('assignment -> equal_or_initialise','assignment',1,'p_assignment_1','parser.py',373),
  ('equal_or_initialise -> IDENTIFIER EQUAL expression','equal_or_initialise',3,'p_equal_or_initialise','parser.py',377),
  ('assignment -> array EQUAL expression','assignment',3,'p_assignment_2','parser.py',381),
  ('assignment -> IDENTIFIER ADD_ASSIGN expression','assignment',3,'p_assignment_3','parser.py',385),
  ('assignment -> IDENTIFIER SUB_ASSIGN expression','assignment',3,'p_assignment_4','parser.py',389),
  ('assignment -> IDENTIFIER DIV_ASSIGN expression','assignment',3,'p_assignment_5','parser.py',393),
  ('assignment -> IDENTIFIER MUL_ASSIGN expression','assignment',3,'p_assignment_6','parser.py',397),
  ('assignment -> IDENTIFIER MOD_ASSIGN expression','assignment',3,'p_assignment_7','parser.py',401),
  ('assignment -> array ADD_ASSIGN expression','assignment',3,'p_assignment_8','parser.py',405),
  ('assignment -> array SUB_ASSIGN expression','assignment',3,'p_assignment_9','parser.py',409),
  ('assignment -> array DIV_ASSIGN expression','assignment',3,'p_assignment_10','parser.py',413),
  ('assignment -> array MOD_ASSIGN expression','assignment',3,'p_assignment_11','parser.py',421),
  ('unary_expression -> IDENTIFIER INC_OP','unary_expression',2,'p_unary_expression_1','parser.py',425),
  ('unary_expression -> IDENTIFIER DEC_OP','unary_expression',2,'p_unary_expression_2','parser.py',429),
  ('unary_expression -> array INC_OP','unary_expression',2,'p_unary_expression_3','parser.py',433),
  ('unary_expression -> array DEC_OP','unary_expression',2,'p_unary_expression_4','parser.py',437),
  ('unary_expression -> INC_OP IDENTIFIER','unary_expression',2,'p_unary_expression_5','parser.py',441),
  ('unary_expression -> INC_OP array','unary_expression',2,'p_unary_expression_6','parser.py',445),
  ('unary_expression -> DEC_OP IDENTIFIER','unary_expression',2,'p_unary_expression_7','parser.py',449),
  ('unary_expression -> DEC_OP array','unary_expression',2,'p_unary_expression_8','parser.py',453),
  ('function_call -> IDENTIFIER LEFT_ROUND function_call_list RIGHT_ROUND','function_call',4,'p_function_call','parser.py',457),
  ('function_call_list -> function_argument','function_call_list',1,'p_function_call_list_1','parser.py',461),
  ('function_call_list -> function_call_list COMMA function_argument','function_call_list',3,'p_function_call_list_2','parser.py',465),
  ('function_argument -> IDENTIFIER','function_argument',1,'p_function_argument_1','parser.py',470),
  ('function_argument -> array','function_argument',1,'p_function_argument_2','parser.py',474),
  ('function_argument -> constant','function_argument',1,'p_function_argument_2','parser.py',475),
]
