
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'M\xb7\xeb\xfb\x1fs\x05_\x1c`\x93)\x81\xa82m'
    
_lr_action_items = {'SHORT':([0,9,10,11,12,18,19,26,29,30,34,47,50,62,66,105,106,107,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[2,-3,-5,-4,2,-2,2,2,-6,2,-32,-62,-23,2,-37,-36,-35,-21,-22,-63,-38,-39,2,2,-34,2,-25,2,2,2,2,2,-33,-31,2,-26,2,-24,2,2,2,-30,-28,-27,2,2,-29,]),'RETURN':([30,34,47,50,62,66,105,106,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[35,-32,-62,-23,35,-37,-36,-35,-22,-63,-38,-39,35,35,-34,35,-25,35,35,35,35,35,-33,-31,35,-26,35,-24,35,35,35,-30,-28,-27,35,35,-29,]),'DEC_OP':([28,30,34,35,43,47,50,52,58,62,64,66,72,73,74,77,78,79,93,94,98,99,100,101,102,103,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,131,143,158,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[-59,37,-32,37,75,-62,-23,96,37,37,-61,-37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-36,-35,-22,37,37,-63,37,37,37,37,37,37,37,37,37,37,-60,-38,-39,37,37,37,37,-34,37,-25,37,37,37,37,37,-33,-31,37,-26,37,-24,37,37,37,-30,-28,-27,37,37,-29,]),'VOID':([0,9,10,11,12,18,29,107,],[3,-3,-5,-4,3,-2,-6,-21,]),'RIGHT_ROUND':([21,22,23,24,28,31,36,38,41,42,43,45,48,51,52,54,55,56,60,64,68,69,70,71,75,76,80,81,82,83,89,90,91,92,96,97,104,122,124,125,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,160,166,167,],[-17,25,-19,-20,-59,-18,-81,-82,-50,-79,-78,-49,-48,-46,-77,-80,-83,-45,-47,-61,-102,-101,-100,-99,-98,-97,-56,-57,-58,-55,-53,-54,-51,-52,-96,-95,145,-60,158,-92,-94,-85,-93,-91,-87,-90,160,-104,-108,-107,-106,-84,-89,-88,-86,163,-76,-73,-67,-69,-68,-74,-72,-64,-71,-66,-65,-70,-75,-103,-105,171,]),'EQUAL':([28,43,52,64,88,122,],[-59,77,98,-61,98,-60,]),'CHAR':([0,9,10,11,12,18,19,26,29,30,34,47,50,62,66,105,106,107,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[4,-3,-5,-4,4,-2,4,4,-6,4,-32,-62,-23,4,-37,-36,-35,-21,-22,-63,-38,-39,4,4,-34,4,-25,4,4,4,4,4,-33,-31,4,-26,4,-24,4,4,4,-30,-28,-27,4,4,-29,]),'WHILE':([30,34,47,50,62,66,105,106,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[40,-32,-62,-23,40,-37,-36,-35,-22,-63,-38,-39,40,40,-34,40,-25,40,40,40,40,40,-33,-31,40,-26,40,-24,40,40,40,-30,-28,-27,40,40,-29,]),'DIV_ASSIGN':([28,43,52,64,122,],[-59,78,100,-61,-60,]),'IF':([30,34,47,50,62,66,105,106,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[57,-32,-62,-23,57,-37,-36,-35,-22,-63,-38,-39,57,57,-34,57,-25,57,57,57,57,57,-33,-31,57,-26,57,-24,57,57,57,-30,-28,-27,57,57,-29,]),'EXP_NUM':([30,34,35,44,47,49,50,58,62,66,72,73,74,77,78,79,93,94,95,98,99,100,101,102,103,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,131,143,158,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[41,-32,41,82,-62,90,-23,41,41,-37,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-36,-35,-22,41,41,-63,41,41,41,41,41,41,41,41,41,41,-38,-39,41,41,41,41,41,-34,41,-25,41,41,41,41,41,-33,-31,41,-26,41,-24,41,41,41,-30,-28,-27,41,41,-29,]),'MULTIPLY':([28,36,38,41,42,43,45,48,51,52,54,55,56,60,63,64,67,68,69,70,71,75,76,80,81,82,83,89,90,91,92,96,97,104,122,124,125,126,127,128,129,132,133,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,160,167,],[-59,-81,-82,-50,-79,-78,-49,-48,-46,-77,-80,-83,-45,-47,118,-61,118,-102,-101,-100,-99,-98,-97,-56,-57,-58,-55,-53,-54,-51,-52,-96,-95,118,-60,118,118,118,118,118,118,118,118,118,118,118,118,118,-76,118,-67,118,118,118,118,118,118,-66,118,118,118,-103,118,]),'MINUS':([28,30,34,35,36,38,41,42,43,45,47,48,50,51,52,54,55,56,58,60,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[-59,44,-32,44,-81,-82,-50,-79,-78,-49,-62,-48,-23,-46,-77,-80,-83,-45,44,-47,44,119,-61,-37,119,-102,-101,-100,-99,44,44,44,-98,-97,44,44,44,-56,-57,-58,-55,-53,-54,-51,-52,44,44,44,-96,-95,44,44,44,44,44,44,119,-36,-35,-22,44,44,-63,44,44,44,44,44,44,44,44,44,44,-60,-38,119,119,119,119,119,119,-39,119,119,119,119,119,119,44,119,-76,119,-67,119,119,119,119,-64,119,-66,-65,119,119,44,-103,44,44,44,-34,44,119,-25,44,44,44,44,44,-33,-31,44,-26,44,-24,44,44,44,-30,-28,-27,44,44,-29,]),'STRING':([30,34,35,47,50,58,62,66,72,73,74,77,78,79,93,94,95,98,99,100,101,102,103,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,131,143,158,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[45,-32,45,-62,-23,45,45,-37,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-36,-35,-22,45,45,-63,45,45,45,45,45,45,45,45,45,45,-38,-39,45,45,45,45,45,-34,45,-25,45,45,45,45,45,-33,-31,45,-26,45,-24,45,45,45,-30,-28,-27,45,45,-29,]),'LE_OP':([28,36,38,41,42,43,45,48,51,52,54,55,56,60,63,64,67,68,69,70,71,75,76,80,81,82,83,89,90,91,92,96,97,104,122,124,125,126,127,128,129,132,133,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,160,167,],[-59,-81,-82,-50,-79,-78,-49,-48,-46,-77,-80,-83,-45,-47,109,-61,109,-102,-101,-100,-99,-98,-97,-56,-57,-58,-55,-53,-54,-51,-52,-96,-95,109,-60,109,109,109,109,109,109,109,109,109,109,109,109,109,-76,-73,-67,-69,-68,109,-72,-64,109,-66,-65,109,109,-103,109,]),'SEMICOLON':([25,28,30,34,35,36,38,41,42,43,45,47,48,50,51,52,54,55,56,59,60,61,62,63,64,66,67,68,69,70,71,75,76,80,81,82,83,84,85,86,87,88,89,90,91,92,96,97,102,105,106,108,111,122,123,125,126,127,128,129,131,132,133,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[29,-59,47,-32,66,-81,-82,-50,-79,-78,-49,-62,-48,-23,-46,-77,-80,-83,-45,105,-47,106,47,111,-61,-37,123,-102,-101,-100,-99,-98,-97,-56,-57,-58,-55,131,-44,-40,-43,-42,-53,-54,-51,-52,-96,-95,47,-36,-35,-22,-63,-60,-38,-92,-94,-85,-93,-91,-39,-87,-90,-84,-89,-88,-86,47,-76,-73,-67,-69,-68,-74,-72,-64,-71,-66,-65,-70,-75,47,-41,-103,47,-34,47,-25,47,47,47,47,47,-33,-31,47,-26,47,-24,47,47,47,-30,-28,-27,47,47,-29,]),'G_OP':([28,36,38,41,42,43,45,48,51,52,54,55,56,60,63,64,67,68,69,70,71,75,76,80,81,82,83,89,90,91,92,96,97,104,122,124,125,126,127,128,129,132,133,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,160,167,],[-59,-81,-82,-50,-79,-78,-49,-48,-46,-77,-80,-83,-45,-47,112,-61,112,-102,-101,-100,-99,-98,-97,-56,-57,-58,-55,-53,-54,-51,-52,-96,-95,112,-60,112,112,112,112,112,112,112,112,112,112,112,112,112,-76,-73,-67,-69,-68,112,-72,-64,112,-66,-65,112,112,-103,112,]),'LEFT_SQUARE':([23,28,52,64,69,71,88,122,138,],[27,33,27,-61,27,27,27,-60,27,]),'UNSIGNED':([0,9,10,11,12,18,19,26,29,30,34,47,50,62,66,105,106,107,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[6,-3,-5,-4,6,-2,6,6,-6,6,-32,-62,-23,6,-37,-36,-35,-21,-22,-63,-38,-39,6,6,-34,6,-25,6,6,6,6,6,-33,-31,6,-26,6,-24,6,6,6,-30,-28,-27,6,6,-29,]),'LONG':([0,9,10,11,12,18,19,26,29,30,34,47,50,62,66,105,106,107,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[7,-3,-5,-4,7,-2,7,7,-6,7,-32,-62,-23,7,-37,-36,-35,-21,-22,-63,-38,-39,7,7,-34,7,-25,7,7,7,7,7,-33,-31,7,-26,7,-24,7,7,7,-30,-28,-27,7,7,-29,]),'L_OP':([28,36,38,41,42,43,45,48,51,52,54,55,56,60,63,64,67,68,69,70,71,75,76,80,81,82,83,89,90,91,92,96,97,104,122,124,125,126,127,128,129,132,133,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,160,167,],[-59,-81,-82,-50,-79,-78,-49,-48,-46,-77,-80,-83,-45,-47,113,-61,113,-102,-101,-100,-99,-98,-97,-56,-57,-58,-55,-53,-54,-51,-52,-96,-95,113,-60,113,113,113,113,113,113,113,113,113,113,113,113,113,-76,-73,-67,-69,-68,113,-72,-64,113,-66,-65,113,113,-103,113,]),'COMMA':([21,22,23,24,28,31,36,38,41,42,43,45,48,51,52,54,55,56,60,64,68,69,70,71,75,76,80,81,82,83,84,85,86,87,88,89,90,91,92,96,97,122,125,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,159,160,166,],[-17,26,-19,-20,-59,-18,-81,-82,-50,-79,-78,-49,-48,-46,-77,-80,-83,-45,-47,-61,-102,-101,-100,-99,-98,-97,-56,-57,-58,-55,130,-44,-40,-43,-42,-53,-54,-51,-52,-96,-95,-60,-92,-94,-85,-93,-91,-87,-90,161,-104,-108,-107,-106,-84,-89,-88,-86,-76,-73,-67,-69,-68,-74,-72,-64,-71,-66,-65,-70,-75,-41,-103,-105,]),'REAL_NUM':([30,34,35,44,47,49,50,58,62,66,72,73,74,77,78,79,93,94,95,98,99,100,101,102,103,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,131,143,158,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[51,-32,51,80,-62,92,-23,51,51,-37,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-36,-35,-22,51,51,-63,51,51,51,51,51,51,51,51,51,51,-38,-39,51,51,51,51,51,-34,51,-25,51,51,51,51,51,-33,-31,51,-26,51,-24,51,51,51,-30,-28,-27,51,51,-29,]),'PLUS':([28,30,34,35,36,38,41,42,43,45,47,48,50,51,52,54,55,56,58,60,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[-59,49,-32,49,-81,-82,-50,-79,-78,-49,-62,-48,-23,-46,-77,-80,-83,-45,49,-47,49,116,-61,-37,116,-102,-101,-100,-99,49,49,49,-98,-97,49,49,49,-56,-57,-58,-55,-53,-54,-51,-52,49,49,49,-96,-95,49,49,49,49,49,49,116,-36,-35,-22,49,49,-63,49,49,49,49,49,49,49,49,49,49,-60,-38,116,116,116,116,116,116,-39,116,116,116,116,116,116,49,116,-76,116,-67,116,116,116,116,-64,116,-66,-65,116,116,49,-103,49,49,49,-34,49,116,-25,49,49,49,49,49,-33,-31,49,-26,49,-24,49,49,49,-30,-28,-27,49,49,-29,]),'IDENTIFIER':([1,2,3,4,5,6,7,13,14,15,16,20,30,34,35,37,39,46,47,50,58,62,66,72,73,74,77,78,79,93,94,95,98,99,100,101,102,103,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,130,131,143,158,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[17,-10,-8,-9,-7,-16,-12,-11,-14,-13,-15,23,52,-32,52,69,71,88,-62,-23,52,52,-37,52,52,52,52,52,52,52,52,138,52,52,52,52,52,52,-36,-35,-22,52,52,-63,52,52,52,52,52,52,52,52,52,52,-38,88,-39,52,52,138,52,52,-34,52,-25,52,52,52,52,52,-33,-31,52,-26,52,-24,52,52,52,-30,-28,-27,52,52,-29,]),'ADD_ASSIGN':([28,43,52,64,122,],[-59,79,101,-61,-60,]),'$end':([8,9,10,11,12,18,29,107,],[0,-3,-5,-4,-1,-2,-6,-21,]),'DIVIDE':([28,36,38,41,42,43,45,48,51,52,54,55,56,60,63,64,67,68,69,70,71,75,76,80,81,82,83,89,90,91,92,96,97,104,122,124,125,126,127,128,129,132,133,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,160,167,],[-59,-81,-82,-50,-79,-78,-49,-48,-46,-77,-80,-83,-45,-47,110,-61,110,-102,-101,-100,-99,-98,-97,-56,-57,-58,-55,-53,-54,-51,-52,-96,-95,110,-60,110,110,110,110,110,110,110,110,110,110,110,110,110,-76,110,-67,110,110,110,110,110,110,-66,110,110,110,-103,110,]),'FOR':([30,34,47,50,62,66,105,106,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[53,-32,-62,-23,53,-37,-36,-35,-22,-63,-38,-39,53,53,-34,53,-25,53,53,53,53,53,-33,-31,53,-26,53,-24,53,53,53,-30,-28,-27,53,53,-29,]),'CHARACTER':([30,34,35,47,50,58,62,66,72,73,74,77,78,79,93,94,95,98,99,100,101,102,103,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,131,143,158,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[48,-32,48,-62,-23,48,48,-37,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-36,-35,-22,48,48,-63,48,48,48,48,48,48,48,48,48,48,-38,-39,48,48,48,48,48,-34,48,-25,48,48,48,48,48,-33,-31,48,-26,48,-24,48,48,48,-30,-28,-27,48,48,-29,]),'RIGHT_CURL':([34,47,50,62,66,105,106,108,111,123,131,164,168,170,173,174,175,177,179,180,181,183,184,185,187,188,],[-32,-62,-23,107,-37,-36,-35,-22,-63,-38,-39,-34,-25,174,179,-33,-31,-26,-24,183,184,-30,-28,-27,188,-29,]),'AND_OP':([28,36,38,41,42,43,45,48,51,52,54,55,56,60,63,64,67,68,69,70,71,75,76,80,81,82,83,89,90,91,92,96,97,104,122,124,125,126,127,128,129,132,133,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,160,167,],[-59,-81,-82,-50,-79,-78,-49,-48,-46,-77,-80,-83,-45,-47,114,-61,114,-102,-101,-100,-99,-98,-97,-56,-57,-58,-55,-53,-54,-51,-52,-96,-95,114,-60,114,114,114,114,114,114,114,114,114,114,114,114,114,-76,-73,-67,-69,-68,-74,-72,-64,-71,-66,-65,-70,114,-103,114,]),'GE_OP':([28,36,38,41,42,43,45,48,51,52,54,55,56,60,63,64,67,68,69,70,71,75,76,80,81,82,83,89,90,91,92,96,97,104,122,124,125,126,127,128,129,132,133,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,160,167,],[-59,-81,-82,-50,-79,-78,-49,-48,-46,-77,-80,-83,-45,-47,115,-61,115,-102,-101,-100,-99,-98,-97,-56,-57,-58,-55,-53,-54,-51,-52,-96,-95,115,-60,115,115,115,115,115,115,115,115,115,115,115,115,115,-76,-73,-67,-69,-68,115,-72,-64,115,-66,-65,115,115,-103,115,]),'ELSE':([34,47,66,105,106,111,123,131,164,168,174,175,177,179,183,184,185,188,],[-32,-62,-37,-36,-35,-63,-38,-39,-34,172,-33,-31,-26,182,-30,-28,-27,-29,]),'HEX_NUM':([30,34,35,44,47,49,50,58,62,66,72,73,74,77,78,79,93,94,95,98,99,100,101,102,103,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,131,143,158,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[56,-32,56,83,-62,91,-23,56,56,-37,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-36,-35,-22,56,56,-63,56,56,56,56,56,56,56,56,56,56,-38,-39,56,56,56,56,56,-34,56,-25,56,56,56,56,56,-33,-31,56,-26,56,-24,56,56,56,-30,-28,-27,56,56,-29,]),'OR_OP':([28,36,38,41,42,43,45,48,51,52,54,55,56,60,63,64,67,68,69,70,71,75,76,80,81,82,83,89,90,91,92,96,97,104,122,124,125,126,127,128,129,132,133,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,160,167,],[-59,-81,-82,-50,-79,-78,-49,-48,-46,-77,-80,-83,-45,-47,121,-61,121,-102,-101,-100,-99,-98,-97,-56,-57,-58,-55,-53,-54,-51,-52,-96,-95,121,-60,121,121,121,121,121,121,121,121,121,121,121,121,121,-76,-73,-67,-69,-68,-74,-72,-64,-71,-66,-65,-70,-75,-103,121,]),'SUB_ASSIGN':([28,43,52,64,122,],[-59,73,93,-61,-60,]),'MOD_ASSIGN':([28,43,52,64,122,],[-59,74,94,-61,-60,]),'LEFT_ROUND':([17,30,34,35,40,47,50,52,53,57,58,62,66,72,73,74,77,78,79,93,94,98,99,100,101,102,103,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,131,143,158,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[19,58,-32,58,72,-62,-23,95,102,103,58,58,-37,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-36,-35,-22,58,58,-63,58,58,58,58,58,58,58,58,58,58,-38,-39,58,58,58,58,-34,58,-25,58,58,58,58,58,-33,-31,58,-26,58,-24,58,58,58,-30,-28,-27,58,58,-29,]),'INT':([0,9,10,11,12,18,19,26,29,30,34,47,50,62,66,105,106,107,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[13,-3,-5,-4,13,-2,13,13,-6,13,-32,-62,-23,13,-37,-36,-35,-21,-22,-63,-38,-39,13,13,-34,13,-25,13,13,13,13,13,-33,-31,13,-26,13,-24,13,13,13,-30,-28,-27,13,13,-29,]),'DOUBLE':([0,9,10,11,12,18,19,26,29,30,34,47,50,62,66,105,106,107,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[14,-3,-5,-4,14,-2,14,14,-6,14,-32,-62,-23,14,-37,-36,-35,-21,-22,-63,-38,-39,14,14,-34,14,-25,14,14,14,14,14,-33,-31,14,-26,14,-24,14,14,14,-30,-28,-27,14,14,-29,]),'FLOAT':([0,9,10,11,12,18,19,26,29,30,34,47,50,62,66,105,106,107,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[15,-3,-5,-4,15,-2,15,15,-6,15,-32,-62,-23,15,-37,-36,-35,-21,-22,-63,-38,-39,15,15,-34,15,-25,15,15,15,15,15,-33,-31,15,-26,15,-24,15,15,15,-30,-28,-27,15,15,-29,]),'RIGHT_SQUARE':([32,65,],[64,122,]),'LEFT_CURL':([25,158,163,171,172,182,],[30,165,169,176,178,186,]),'SIGNED':([0,9,10,11,12,18,19,26,29,30,34,47,50,62,66,105,106,107,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[16,-3,-5,-4,16,-2,16,16,-6,16,-32,-62,-23,16,-37,-36,-35,-21,-22,-63,-38,-39,16,16,-34,16,-25,16,16,16,16,16,-33,-31,16,-26,16,-24,16,16,16,-30,-28,-27,16,16,-29,]),'BREAK':([30,34,47,50,62,66,105,106,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[59,-32,-62,-23,59,-37,-36,-35,-22,-63,-38,-39,59,59,-34,59,-25,59,59,59,59,59,-33,-31,59,-26,59,-24,59,59,59,-30,-28,-27,59,59,-29,]),'INT_NUM':([27,30,33,34,35,44,47,49,50,58,62,66,72,73,74,77,78,79,93,94,95,98,99,100,101,102,103,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,131,143,158,161,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[32,60,65,-32,60,81,-62,89,-23,60,60,-37,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-36,-35,-22,60,60,-63,60,60,60,60,60,60,60,60,60,60,-38,-39,60,60,60,60,60,-34,60,-25,60,60,60,60,60,-33,-31,60,-26,60,-24,60,60,60,-30,-28,-27,60,60,-29,]),'CONTINUE':([30,34,47,50,62,66,105,106,108,111,123,131,158,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[61,-32,-62,-23,61,-37,-36,-35,-22,-63,-38,-39,61,61,-34,61,-25,61,61,61,61,61,-33,-31,61,-26,61,-24,61,61,61,-30,-28,-27,61,61,-29,]),'MUL_ASSIGN':([52,],[99,]),'INC_OP':([28,30,34,35,43,47,50,52,58,62,64,66,72,73,74,77,78,79,93,94,98,99,100,101,102,103,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,131,143,158,162,163,164,165,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,],[-59,39,-32,39,76,-62,-23,97,39,39,-61,-37,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-36,-35,-22,39,39,-63,39,39,39,39,39,39,39,39,39,39,-60,-38,-39,39,39,39,39,-34,39,-25,39,39,39,39,39,-33,-31,39,-26,39,-24,39,39,39,-30,-28,-27,39,39,-29,]),'NE_OP':([28,36,38,41,42,43,45,48,51,52,54,55,56,60,63,64,67,68,69,70,71,75,76,80,81,82,83,89,90,91,92,96,97,104,122,124,125,126,127,128,129,132,133,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,160,167,],[-59,-81,-82,-50,-79,-78,-49,-48,-46,-77,-80,-83,-45,-47,120,-61,120,-102,-101,-100,-99,-98,-97,-56,-57,-58,-55,-53,-54,-51,-52,-96,-95,120,-60,120,120,120,120,120,120,120,120,120,120,120,120,120,-76,-73,-67,-69,-68,120,-72,-64,-71,-66,-65,-70,120,-103,120,]),'EQ_OP':([28,36,38,41,42,43,45,48,51,52,54,55,56,60,63,64,67,68,69,70,71,75,76,80,81,82,83,89,90,91,92,96,97,104,122,124,125,126,127,128,129,132,133,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,160,167,],[-59,-81,-82,-50,-79,-78,-49,-48,-46,-77,-80,-83,-45,-47,117,-61,117,-102,-101,-100,-99,-98,-97,-56,-57,-58,-55,-53,-54,-51,-52,-96,-95,117,-60,117,117,117,117,117,117,117,117,117,117,117,117,117,-76,-73,-67,-69,-68,117,-72,-64,-71,-66,-65,-70,117,-103,117,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([30,62,102,143,158,163,165,169,170,171,172,173,176,178,180,181,182,186,187,],[34,34,143,162,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'return_type_specifier':([0,12,],[1,1,]),'constant':([30,35,58,62,72,73,74,77,78,79,93,94,95,98,99,100,101,102,103,109,110,112,113,114,115,116,117,118,119,120,121,143,158,161,162,163,165,169,170,171,172,173,176,178,180,181,182,186,187,],[42,42,42,42,42,42,42,42,42,42,42,42,136,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,136,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'unary_expression':([30,35,58,62,72,73,74,77,78,79,93,94,98,99,100,101,102,103,109,110,112,113,114,115,116,117,118,119,120,121,143,158,162,163,165,169,170,171,172,173,176,178,180,181,182,186,187,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'argument':([19,26,],[21,31,]),'function_call':([30,35,58,62,72,73,74,77,78,79,93,94,98,99,100,101,102,103,109,110,112,113,114,115,116,117,118,119,120,121,143,158,162,163,165,169,170,171,172,173,176,178,180,181,182,186,187,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'array':([20,30,35,37,39,46,58,62,72,73,74,77,78,79,93,94,95,98,99,100,101,102,103,109,110,112,113,114,115,116,117,118,119,120,121,130,143,158,161,162,163,165,169,170,171,172,173,176,178,180,181,182,186,187,],[24,43,43,68,70,87,43,43,43,43,43,43,43,43,43,43,137,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,87,43,43,137,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'type_specifier':([0,12,19,26,30,62,158,163,165,169,170,171,172,173,176,178,180,181,182,186,187,],[5,5,20,20,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'function_call_list':([95,],[134,]),'program':([0,],[8,]),'array_index':([23,52,69,71,88,138,],[28,28,28,28,28,28,]),'statement':([30,62,158,163,165,169,170,171,172,173,176,178,180,181,182,186,187,],[50,108,164,168,50,50,108,175,177,108,50,50,108,108,185,50,108,]),'argument_list':([19,],[22,]),'function':([0,12,],[9,18,]),'assignment':([30,35,58,62,72,73,74,77,78,79,93,94,98,99,100,101,102,103,109,110,112,113,114,115,116,117,118,119,120,121,143,158,162,163,165,169,170,171,172,173,176,178,180,181,182,186,187,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'function_argument':([95,161,],[135,166,]),'equal_or_initialise':([30,35,46,58,62,72,73,74,77,78,79,93,94,98,99,100,101,102,103,109,110,112,113,114,115,116,117,118,119,120,121,130,143,158,162,163,165,169,170,171,172,173,176,178,180,181,182,186,187,],[55,55,85,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,85,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'declaration':([46,130,],[86,159,]),'function_definition':([0,12,],[10,10,]),'function_declaration':([0,12,],[11,11,]),'function_list':([0,],[12,]),'declaration_list':([46,],[84,]),'statement_list':([30,165,169,176,178,186,],[62,170,173,180,181,187,]),'expression':([30,35,58,62,72,73,74,77,78,79,93,94,98,99,100,101,102,103,109,110,112,113,114,115,116,117,118,119,120,121,143,158,162,163,165,169,170,171,172,173,176,178,180,181,182,186,187,],[63,67,104,63,124,125,126,127,128,129,132,133,139,140,141,142,63,144,146,147,148,149,150,151,152,153,154,155,156,157,63,63,167,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_list','program',1,'p_program','parser.py',103),
  ('function_list -> function_list function','function_list',2,'p_function_list_1','parser.py',107),
  ('function_list -> function','function_list',1,'p_function_list_2','parser.py',112),
  ('function -> function_declaration','function',1,'p_function_1','parser.py',116),
  ('function -> function_definition','function',1,'p_function_2','parser.py',120),
  ('function_declaration -> return_type_specifier IDENTIFIER LEFT_ROUND argument_list RIGHT_ROUND SEMICOLON','function_declaration',6,'p_function_declaration','parser.py',124),
  ('return_type_specifier -> type_specifier','return_type_specifier',1,'p_return_type_specifier_1','parser.py',128),
  ('return_type_specifier -> VOID','return_type_specifier',1,'p_return_type_specifier_2','parser.py',132),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_1','parser.py',136),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_1','parser.py',137),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_1','parser.py',138),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_1','parser.py',139),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_1','parser.py',140),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_1','parser.py',141),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_1','parser.py',142),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_1','parser.py',143),
  ('argument_list -> argument','argument_list',1,'p_argument_list_1','parser.py',147),
  ('argument_list -> argument_list COMMA argument','argument_list',3,'p_argument_list_2','parser.py',151),
  ('argument -> type_specifier IDENTIFIER','argument',2,'p_argument_1','parser.py',156),
  ('argument -> type_specifier array','argument',2,'p_argument_2','parser.py',160),
  ('function_definition -> return_type_specifier IDENTIFIER LEFT_ROUND argument_list RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL','function_definition',8,'p_function_definition','parser.py',164),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','parser.py',168),
  ('statement_list -> statement','statement_list',1,'p_statement_list_2','parser.py',173),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL','statement',7,'p_statement_1','parser.py',177),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND statement','statement',5,'p_statement_2','parser.py',181),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND statement ELSE statement','statement',7,'p_statement_3','parser.py',185),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL ELSE statement','statement',9,'p_statement_4','parser.py',189),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND statement ELSE LEFT_CURL statement_list RIGHT_CURL','statement',9,'p_statement_5','parser.py',193),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL ELSE LEFT_CURL statement_list RIGHT_CURL','statement',11,'p_statement_6','parser.py',197),
  ('statement -> FOR LEFT_ROUND expression_statement expression_statement expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL','statement',9,'p_statement_7','parser.py',201),
  ('statement -> FOR LEFT_ROUND expression_statement expression_statement expression RIGHT_ROUND statement','statement',7,'p_statement_8','parser.py',205),
  ('statement -> expression_statement','statement',1,'p_statement_9','parser.py',209),
  ('statement -> WHILE LEFT_ROUND expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL','statement',7,'p_statement_10','parser.py',213),
  ('statement -> WHILE LEFT_ROUND expression RIGHT_ROUND statement','statement',5,'p_statement_11','parser.py',217),
  ('statement -> CONTINUE SEMICOLON','statement',2,'p_statement_12','parser.py',221),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement_12','parser.py',222),
  ('statement -> RETURN SEMICOLON','statement',2,'p_statement_12','parser.py',223),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statement_13','parser.py',227),
  ('statement -> type_specifier declaration_list SEMICOLON','statement',3,'p_statement_14','parser.py',231),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_1','parser.py',235),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list_2','parser.py',239),
  ('declaration -> IDENTIFIER','declaration',1,'p_declaration_1','parser.py',244),
  ('declaration -> array','declaration',1,'p_declaration_2','parser.py',248),
  ('declaration -> equal_or_initialise','declaration',1,'p_declaration_2','parser.py',249),
  ('constant -> HEX_NUM','constant',1,'p_constant_1','parser.py',253),
  ('constant -> REAL_NUM','constant',1,'p_constant_1','parser.py',254),
  ('constant -> INT_NUM','constant',1,'p_constant_1','parser.py',255),
  ('constant -> CHARACTER','constant',1,'p_constant_1','parser.py',256),
  ('constant -> STRING','constant',1,'p_constant_1','parser.py',257),
  ('constant -> EXP_NUM','constant',1,'p_constant_1','parser.py',258),
  ('constant -> PLUS HEX_NUM','constant',2,'p_constant_2','parser.py',262),
  ('constant -> PLUS REAL_NUM','constant',2,'p_constant_2','parser.py',263),
  ('constant -> PLUS INT_NUM','constant',2,'p_constant_2','parser.py',264),
  ('constant -> PLUS EXP_NUM','constant',2,'p_constant_2','parser.py',265),
  ('constant -> MINUS HEX_NUM','constant',2,'p_constant_3','parser.py',269),
  ('constant -> MINUS REAL_NUM','constant',2,'p_constant_3','parser.py',270),
  ('constant -> MINUS INT_NUM','constant',2,'p_constant_3','parser.py',271),
  ('constant -> MINUS EXP_NUM','constant',2,'p_constant_3','parser.py',272),
  ('array -> IDENTIFIER array_index','array',2,'p_array','parser.py',277),
  ('array_index -> array_index LEFT_SQUARE INT_NUM RIGHT_SQUARE','array_index',4,'p_array_index_1','parser.py',281),
  ('array_index -> LEFT_SQUARE INT_NUM RIGHT_SQUARE','array_index',3,'p_array_index_2','parser.py',286),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement_1','parser.py',290),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement_2','parser.py',294),
  ('expression -> expression PLUS expression','expression',3,'p_expression_1','parser.py',298),
  ('expression -> expression MINUS expression','expression',3,'p_expression_2','parser.py',302),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_3','parser.py',306),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_4','parser.py',310),
  ('expression -> expression L_OP expression','expression',3,'p_expression_5','parser.py',314),
  ('expression -> expression G_OP expression','expression',3,'p_expression_6','parser.py',318),
  ('expression -> expression NE_OP expression','expression',3,'p_expression_7','parser.py',322),
  ('expression -> expression EQ_OP expression','expression',3,'p_expression_8','parser.py',326),
  ('expression -> expression GE_OP expression','expression',3,'p_expression_9','parser.py',330),
  ('expression -> expression LE_OP expression','expression',3,'p_expression_10','parser.py',334),
  ('expression -> expression AND_OP expression','expression',3,'p_expression_11','parser.py',338),
  ('expression -> expression OR_OP expression','expression',3,'p_expression_12','parser.py',342),
  ('expression -> LEFT_ROUND expression RIGHT_ROUND','expression',3,'p_expression_13','parser.py',346),
  ('expression -> IDENTIFIER','expression',1,'p_expression_14','parser.py',350),
  ('expression -> array','expression',1,'p_expression_15','parser.py',354),
  ('expression -> constant','expression',1,'p_expression_15','parser.py',355),
  ('expression -> assignment','expression',1,'p_expression_16','parser.py',359),
  ('expression -> unary_expression','expression',1,'p_expression_16','parser.py',360),
  ('expression -> function_call','expression',1,'p_expression_16','parser.py',361),
  ('assignment -> equal_or_initialise','assignment',1,'p_assignment_1','parser.py',365),
  ('equal_or_initialise -> IDENTIFIER EQUAL expression','equal_or_initialise',3,'p_equal_or_initialise','parser.py',369),
  ('assignment -> array EQUAL expression','assignment',3,'p_assignment_2','parser.py',373),
  ('assignment -> IDENTIFIER ADD_ASSIGN expression','assignment',3,'p_assignment_3','parser.py',377),
  ('assignment -> IDENTIFIER SUB_ASSIGN expression','assignment',3,'p_assignment_4','parser.py',381),
  ('assignment -> IDENTIFIER DIV_ASSIGN expression','assignment',3,'p_assignment_5','parser.py',385),
  ('assignment -> IDENTIFIER MUL_ASSIGN expression','assignment',3,'p_assignment_6','parser.py',389),
  ('assignment -> IDENTIFIER MOD_ASSIGN expression','assignment',3,'p_assignment_7','parser.py',393),
  ('assignment -> array ADD_ASSIGN expression','assignment',3,'p_assignment_8','parser.py',397),
  ('assignment -> array SUB_ASSIGN expression','assignment',3,'p_assignment_9','parser.py',401),
  ('assignment -> array DIV_ASSIGN expression','assignment',3,'p_assignment_10','parser.py',405),
  ('assignment -> array MOD_ASSIGN expression','assignment',3,'p_assignment_11','parser.py',413),
  ('unary_expression -> IDENTIFIER INC_OP','unary_expression',2,'p_unary_expression_1','parser.py',417),
  ('unary_expression -> IDENTIFIER DEC_OP','unary_expression',2,'p_unary_expression_2','parser.py',421),
  ('unary_expression -> array INC_OP','unary_expression',2,'p_unary_expression_3','parser.py',425),
  ('unary_expression -> array DEC_OP','unary_expression',2,'p_unary_expression_4','parser.py',429),
  ('unary_expression -> INC_OP IDENTIFIER','unary_expression',2,'p_unary_expression_5','parser.py',433),
  ('unary_expression -> INC_OP array','unary_expression',2,'p_unary_expression_6','parser.py',437),
  ('unary_expression -> DEC_OP IDENTIFIER','unary_expression',2,'p_unary_expression_7','parser.py',441),
  ('unary_expression -> DEC_OP array','unary_expression',2,'p_unary_expression_8','parser.py',445),
  ('function_call -> IDENTIFIER LEFT_ROUND function_call_list RIGHT_ROUND','function_call',4,'p_function_call','parser.py',449),
  ('function_call_list -> function_argument','function_call_list',1,'p_function_call_list_1','parser.py',453),
  ('function_call_list -> function_call_list COMMA function_argument','function_call_list',3,'p_function_call_list_2','parser.py',457),
  ('function_argument -> IDENTIFIER','function_argument',1,'p_function_argument_1','parser.py',462),
  ('function_argument -> array','function_argument',1,'p_function_argument_2','parser.py',466),
  ('function_argument -> constant','function_argument',1,'p_function_argument_2','parser.py',467),
]
