
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\nj\xf54\xcd\x0c\xad\x8e Q\xa7\xf7\x07\x1b\xde\xdc'
    
_lr_action_items = {'SHORT':([0,9,10,11,12,18,19,26,29,30,34,46,48,60,64,95,96,97,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[2,-3,-5,-4,2,-2,2,2,-6,2,-32,-54,-23,2,-37,-36,-35,-21,-22,-55,-38,-39,2,2,-34,2,-25,2,2,2,2,2,-33,-31,2,-26,2,-24,2,2,2,-30,-28,-27,2,2,-29,]),'RETURN':([30,34,46,48,60,64,95,96,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[35,-32,-54,-23,35,-37,-36,-35,-22,-55,-38,-39,35,35,-34,35,-25,35,35,35,35,35,-33,-31,35,-26,35,-24,35,35,35,-30,-28,-27,35,35,-29,]),'DEC_OP':([28,30,34,35,43,46,48,50,56,60,62,64,70,71,72,75,76,77,83,84,88,89,90,91,92,93,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,133,148,152,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[-51,37,-32,37,73,-54,-23,86,37,37,-53,-37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-36,-35,-22,37,37,-55,37,37,37,37,37,37,37,37,37,37,-52,-38,-39,37,37,37,37,-34,37,-25,37,37,37,37,37,-33,-31,37,-26,37,-24,37,37,37,-30,-28,-27,37,37,-29,]),'VOID':([0,9,10,11,12,18,29,97,],[3,-3,-5,-4,3,-2,-6,-21,]),'RIGHT_ROUND':([21,22,23,24,28,31,36,38,41,42,43,44,47,49,50,52,53,54,58,62,66,67,68,69,73,74,86,87,94,112,114,115,116,117,118,119,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,156,157,],[-17,25,-19,-20,-51,-18,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,-53,-94,-93,-92,-91,-90,-89,-88,-87,135,-52,148,-84,-86,-77,-85,-83,-79,-82,150,-96,-100,-99,-98,-76,-81,-80,-78,153,-68,-65,-59,-61,-60,-66,-64,-56,-63,-58,-57,-62,-67,-95,-97,161,]),'EQUAL':([28,43,50,62,82,112,],[-51,75,88,-53,88,-52,]),'CHAR':([0,9,10,11,12,18,19,26,29,30,34,46,48,60,64,95,96,97,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[4,-3,-5,-4,4,-2,4,4,-6,4,-32,-54,-23,4,-37,-36,-35,-21,-22,-55,-38,-39,4,4,-34,4,-25,4,4,4,4,4,-33,-31,4,-26,4,-24,4,4,4,-30,-28,-27,4,4,-29,]),'WHILE':([30,34,46,48,60,64,95,96,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[40,-32,-54,-23,40,-37,-36,-35,-22,-55,-38,-39,40,40,-34,40,-25,40,40,40,40,40,-33,-31,40,-26,40,-24,40,40,40,-30,-28,-27,40,40,-29,]),'DIV_ASSIGN':([28,43,50,62,112,],[-51,76,90,-53,-52,]),'IF':([30,34,46,48,60,64,95,96,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[55,-32,-54,-23,55,-37,-36,-35,-22,-55,-38,-39,55,55,-34,55,-25,55,55,55,55,55,-33,-31,55,-26,55,-24,55,55,55,-30,-28,-27,55,55,-29,]),'EXP_NUM':([30,34,35,46,48,56,60,64,70,71,72,75,76,77,83,84,85,88,89,90,91,92,93,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,121,133,148,151,152,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[41,-32,41,-54,-23,41,41,-37,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-36,-35,-22,41,41,-55,41,41,41,41,41,41,41,41,41,41,-38,-39,41,41,41,41,41,-34,41,-25,41,41,41,41,41,-33,-31,41,-26,41,-24,41,41,41,-30,-28,-27,41,41,-29,]),'MULTIPLY':([28,36,38,41,42,43,44,47,49,50,52,53,54,58,61,62,65,66,67,68,69,73,74,86,87,94,112,114,115,116,117,118,119,122,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,],[-51,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,108,-53,108,-94,-93,-92,-91,-90,-89,-88,-87,108,-52,108,108,108,108,108,108,108,108,108,108,108,108,108,-68,108,-59,108,108,108,108,108,108,-58,108,108,108,-95,108,]),'MINUS':([28,36,38,41,42,43,44,47,49,50,52,53,54,58,61,62,65,66,67,68,69,73,74,86,87,94,112,114,115,116,117,118,119,122,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,],[-51,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,109,-53,109,-94,-93,-92,-91,-90,-89,-88,-87,109,-52,109,109,109,109,109,109,109,109,109,109,109,109,109,-68,109,-59,109,109,109,109,-56,109,-58,-57,109,109,-95,109,]),'STRING':([30,34,35,46,48,56,60,64,70,71,72,75,76,77,83,84,85,88,89,90,91,92,93,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,121,133,148,151,152,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[44,-32,44,-54,-23,44,44,-37,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-36,-35,-22,44,44,-55,44,44,44,44,44,44,44,44,44,44,-38,-39,44,44,44,44,44,-34,44,-25,44,44,44,44,44,-33,-31,44,-26,44,-24,44,44,44,-30,-28,-27,44,44,-29,]),'LE_OP':([28,36,38,41,42,43,44,47,49,50,52,53,54,58,61,62,65,66,67,68,69,73,74,86,87,94,112,114,115,116,117,118,119,122,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,],[-51,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,99,-53,99,-94,-93,-92,-91,-90,-89,-88,-87,99,-52,99,99,99,99,99,99,99,99,99,99,99,99,99,-68,-65,-59,-61,-60,99,-64,-56,99,-58,-57,99,99,-95,99,]),'SEMICOLON':([25,28,30,34,35,36,38,41,42,43,44,46,47,48,49,50,52,53,54,57,58,59,60,61,62,64,65,66,67,68,69,73,74,78,79,80,81,82,86,87,92,95,96,98,101,112,113,115,116,117,118,119,121,122,123,129,130,131,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[29,-51,46,-32,64,-73,-74,-50,-71,-70,-49,-54,-48,-23,-46,-69,-72,-75,-45,95,-47,96,46,101,-53,-37,113,-94,-93,-92,-91,-90,-89,121,-44,-40,-43,-42,-88,-87,46,-36,-35,-22,-55,-52,-38,-84,-86,-77,-85,-83,-39,-79,-82,-76,-81,-80,-78,46,-68,-65,-59,-61,-60,-66,-64,-56,-63,-58,-57,-62,-67,46,-41,-95,46,-34,46,-25,46,46,46,46,46,-33,-31,46,-26,46,-24,46,46,46,-30,-28,-27,46,46,-29,]),'G_OP':([28,36,38,41,42,43,44,47,49,50,52,53,54,58,61,62,65,66,67,68,69,73,74,86,87,94,112,114,115,116,117,118,119,122,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,],[-51,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,102,-53,102,-94,-93,-92,-91,-90,-89,-88,-87,102,-52,102,102,102,102,102,102,102,102,102,102,102,102,102,-68,-65,-59,-61,-60,102,-64,-56,102,-58,-57,102,102,-95,102,]),'LEFT_SQUARE':([23,28,50,62,67,69,82,112,128,],[27,33,27,-53,27,27,27,-52,27,]),'UNSIGNED':([0,9,10,11,12,18,19,26,29,30,34,46,48,60,64,95,96,97,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[6,-3,-5,-4,6,-2,6,6,-6,6,-32,-54,-23,6,-37,-36,-35,-21,-22,-55,-38,-39,6,6,-34,6,-25,6,6,6,6,6,-33,-31,6,-26,6,-24,6,6,6,-30,-28,-27,6,6,-29,]),'LONG':([0,9,10,11,12,18,19,26,29,30,34,46,48,60,64,95,96,97,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[7,-3,-5,-4,7,-2,7,7,-6,7,-32,-54,-23,7,-37,-36,-35,-21,-22,-55,-38,-39,7,7,-34,7,-25,7,7,7,7,7,-33,-31,7,-26,7,-24,7,7,7,-30,-28,-27,7,7,-29,]),'L_OP':([28,36,38,41,42,43,44,47,49,50,52,53,54,58,61,62,65,66,67,68,69,73,74,86,87,94,112,114,115,116,117,118,119,122,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,],[-51,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,103,-53,103,-94,-93,-92,-91,-90,-89,-88,-87,103,-52,103,103,103,103,103,103,103,103,103,103,103,103,103,-68,-65,-59,-61,-60,103,-64,-56,103,-58,-57,103,103,-95,103,]),'COMMA':([21,22,23,24,28,31,36,38,41,42,43,44,47,49,50,52,53,54,58,62,66,67,68,69,73,74,78,79,80,81,82,86,87,112,115,116,117,118,119,122,123,124,125,126,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,156,],[-17,26,-19,-20,-51,-18,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,-53,-94,-93,-92,-91,-90,-89,120,-44,-40,-43,-42,-88,-87,-52,-84,-86,-77,-85,-83,-79,-82,151,-96,-100,-99,-98,-76,-81,-80,-78,-68,-65,-59,-61,-60,-66,-64,-56,-63,-58,-57,-62,-67,-41,-95,-97,]),'REAL_NUM':([30,34,35,46,48,56,60,64,70,71,72,75,76,77,83,84,85,88,89,90,91,92,93,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,121,133,148,151,152,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[49,-32,49,-54,-23,49,49,-37,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-36,-35,-22,49,49,-55,49,49,49,49,49,49,49,49,49,49,-38,-39,49,49,49,49,49,-34,49,-25,49,49,49,49,49,-33,-31,49,-26,49,-24,49,49,49,-30,-28,-27,49,49,-29,]),'PLUS':([28,36,38,41,42,43,44,47,49,50,52,53,54,58,61,62,65,66,67,68,69,73,74,86,87,94,112,114,115,116,117,118,119,122,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,],[-51,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,106,-53,106,-94,-93,-92,-91,-90,-89,-88,-87,106,-52,106,106,106,106,106,106,106,106,106,106,106,106,106,-68,106,-59,106,106,106,106,-56,106,-58,-57,106,106,-95,106,]),'IDENTIFIER':([1,2,3,4,5,6,7,13,14,15,16,20,30,34,35,37,39,45,46,48,56,60,64,70,71,72,75,76,77,83,84,85,88,89,90,91,92,93,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,120,121,133,148,151,152,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[17,-10,-8,-9,-7,-16,-12,-11,-14,-13,-15,23,50,-32,50,67,69,82,-54,-23,50,50,-37,50,50,50,50,50,50,50,50,128,50,50,50,50,50,50,-36,-35,-22,50,50,-55,50,50,50,50,50,50,50,50,50,50,-38,82,-39,50,50,128,50,50,-34,50,-25,50,50,50,50,50,-33,-31,50,-26,50,-24,50,50,50,-30,-28,-27,50,50,-29,]),'ADD_ASSIGN':([28,43,50,62,112,],[-51,77,91,-53,-52,]),'$end':([8,9,10,11,12,18,29,97,],[0,-3,-5,-4,-1,-2,-6,-21,]),'DIVIDE':([28,36,38,41,42,43,44,47,49,50,52,53,54,58,61,62,65,66,67,68,69,73,74,86,87,94,112,114,115,116,117,118,119,122,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,],[-51,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,100,-53,100,-94,-93,-92,-91,-90,-89,-88,-87,100,-52,100,100,100,100,100,100,100,100,100,100,100,100,100,-68,100,-59,100,100,100,100,100,100,-58,100,100,100,-95,100,]),'FOR':([30,34,46,48,60,64,95,96,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[51,-32,-54,-23,51,-37,-36,-35,-22,-55,-38,-39,51,51,-34,51,-25,51,51,51,51,51,-33,-31,51,-26,51,-24,51,51,51,-30,-28,-27,51,51,-29,]),'CHARACTER':([30,34,35,46,48,56,60,64,70,71,72,75,76,77,83,84,85,88,89,90,91,92,93,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,121,133,148,151,152,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[47,-32,47,-54,-23,47,47,-37,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-36,-35,-22,47,47,-55,47,47,47,47,47,47,47,47,47,47,-38,-39,47,47,47,47,47,-34,47,-25,47,47,47,47,47,-33,-31,47,-26,47,-24,47,47,47,-30,-28,-27,47,47,-29,]),'RIGHT_CURL':([34,46,48,60,64,95,96,98,101,113,121,154,158,160,163,164,165,167,169,170,171,173,174,175,177,178,],[-32,-54,-23,97,-37,-36,-35,-22,-55,-38,-39,-34,-25,164,169,-33,-31,-26,-24,173,174,-30,-28,-27,178,-29,]),'AND_OP':([28,36,38,41,42,43,44,47,49,50,52,53,54,58,61,62,65,66,67,68,69,73,74,86,87,94,112,114,115,116,117,118,119,122,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,],[-51,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,104,-53,104,-94,-93,-92,-91,-90,-89,-88,-87,104,-52,104,104,104,104,104,104,104,104,104,104,104,104,104,-68,-65,-59,-61,-60,-66,-64,-56,-63,-58,-57,-62,104,-95,104,]),'GE_OP':([28,36,38,41,42,43,44,47,49,50,52,53,54,58,61,62,65,66,67,68,69,73,74,86,87,94,112,114,115,116,117,118,119,122,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,],[-51,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,105,-53,105,-94,-93,-92,-91,-90,-89,-88,-87,105,-52,105,105,105,105,105,105,105,105,105,105,105,105,105,-68,-65,-59,-61,-60,105,-64,-56,105,-58,-57,105,105,-95,105,]),'ELSE':([34,46,64,95,96,101,113,121,154,158,164,165,167,169,173,174,175,178,],[-32,-54,-37,-36,-35,-55,-38,-39,-34,162,-33,-31,-26,172,-30,-28,-27,-29,]),'HEX_NUM':([30,34,35,46,48,56,60,64,70,71,72,75,76,77,83,84,85,88,89,90,91,92,93,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,121,133,148,151,152,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[54,-32,54,-54,-23,54,54,-37,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-36,-35,-22,54,54,-55,54,54,54,54,54,54,54,54,54,54,-38,-39,54,54,54,54,54,-34,54,-25,54,54,54,54,54,-33,-31,54,-26,54,-24,54,54,54,-30,-28,-27,54,54,-29,]),'OR_OP':([28,36,38,41,42,43,44,47,49,50,52,53,54,58,61,62,65,66,67,68,69,73,74,86,87,94,112,114,115,116,117,118,119,122,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,],[-51,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,111,-53,111,-94,-93,-92,-91,-90,-89,-88,-87,111,-52,111,111,111,111,111,111,111,111,111,111,111,111,111,-68,-65,-59,-61,-60,-66,-64,-56,-63,-58,-57,-62,-67,-95,111,]),'SUB_ASSIGN':([28,43,50,62,112,],[-51,71,83,-53,-52,]),'MOD_ASSIGN':([28,43,50,62,112,],[-51,72,84,-53,-52,]),'LEFT_ROUND':([17,30,34,35,40,46,48,50,51,55,56,60,64,70,71,72,75,76,77,83,84,88,89,90,91,92,93,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,121,133,148,152,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[19,56,-32,56,70,-54,-23,85,92,93,56,56,-37,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-36,-35,-22,56,56,-55,56,56,56,56,56,56,56,56,56,56,-38,-39,56,56,56,56,-34,56,-25,56,56,56,56,56,-33,-31,56,-26,56,-24,56,56,56,-30,-28,-27,56,56,-29,]),'INT':([0,9,10,11,12,18,19,26,29,30,34,46,48,60,64,95,96,97,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[13,-3,-5,-4,13,-2,13,13,-6,13,-32,-54,-23,13,-37,-36,-35,-21,-22,-55,-38,-39,13,13,-34,13,-25,13,13,13,13,13,-33,-31,13,-26,13,-24,13,13,13,-30,-28,-27,13,13,-29,]),'DOUBLE':([0,9,10,11,12,18,19,26,29,30,34,46,48,60,64,95,96,97,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[14,-3,-5,-4,14,-2,14,14,-6,14,-32,-54,-23,14,-37,-36,-35,-21,-22,-55,-38,-39,14,14,-34,14,-25,14,14,14,14,14,-33,-31,14,-26,14,-24,14,14,14,-30,-28,-27,14,14,-29,]),'FLOAT':([0,9,10,11,12,18,19,26,29,30,34,46,48,60,64,95,96,97,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[15,-3,-5,-4,15,-2,15,15,-6,15,-32,-54,-23,15,-37,-36,-35,-21,-22,-55,-38,-39,15,15,-34,15,-25,15,15,15,15,15,-33,-31,15,-26,15,-24,15,15,15,-30,-28,-27,15,15,-29,]),'RIGHT_SQUARE':([32,63,],[62,112,]),'LEFT_CURL':([25,148,153,161,162,172,],[30,155,159,166,168,176,]),'SIGNED':([0,9,10,11,12,18,19,26,29,30,34,46,48,60,64,95,96,97,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[16,-3,-5,-4,16,-2,16,16,-6,16,-32,-54,-23,16,-37,-36,-35,-21,-22,-55,-38,-39,16,16,-34,16,-25,16,16,16,16,16,-33,-31,16,-26,16,-24,16,16,16,-30,-28,-27,16,16,-29,]),'BREAK':([30,34,46,48,60,64,95,96,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[57,-32,-54,-23,57,-37,-36,-35,-22,-55,-38,-39,57,57,-34,57,-25,57,57,57,57,57,-33,-31,57,-26,57,-24,57,57,57,-30,-28,-27,57,57,-29,]),'INT_NUM':([27,30,33,34,35,46,48,56,60,64,70,71,72,75,76,77,83,84,85,88,89,90,91,92,93,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,121,133,148,151,152,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[32,58,63,-32,58,-54,-23,58,58,-37,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-36,-35,-22,58,58,-55,58,58,58,58,58,58,58,58,58,58,-38,-39,58,58,58,58,58,-34,58,-25,58,58,58,58,58,-33,-31,58,-26,58,-24,58,58,58,-30,-28,-27,58,58,-29,]),'CONTINUE':([30,34,46,48,60,64,95,96,98,101,113,121,148,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[59,-32,-54,-23,59,-37,-36,-35,-22,-55,-38,-39,59,59,-34,59,-25,59,59,59,59,59,-33,-31,59,-26,59,-24,59,59,59,-30,-28,-27,59,59,-29,]),'MUL_ASSIGN':([50,],[89,]),'INC_OP':([28,30,34,35,43,46,48,50,56,60,62,64,70,71,72,75,76,77,83,84,88,89,90,91,92,93,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,121,133,148,152,153,154,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,],[-51,39,-32,39,74,-54,-23,87,39,39,-53,-37,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-36,-35,-22,39,39,-55,39,39,39,39,39,39,39,39,39,39,-52,-38,-39,39,39,39,39,-34,39,-25,39,39,39,39,39,-33,-31,39,-26,39,-24,39,39,39,-30,-28,-27,39,39,-29,]),'NE_OP':([28,36,38,41,42,43,44,47,49,50,52,53,54,58,61,62,65,66,67,68,69,73,74,86,87,94,112,114,115,116,117,118,119,122,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,],[-51,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,110,-53,110,-94,-93,-92,-91,-90,-89,-88,-87,110,-52,110,110,110,110,110,110,110,110,110,110,110,110,110,-68,-65,-59,-61,-60,110,-64,-56,-63,-58,-57,-62,110,-95,110,]),'EQ_OP':([28,36,38,41,42,43,44,47,49,50,52,53,54,58,61,62,65,66,67,68,69,73,74,86,87,94,112,114,115,116,117,118,119,122,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,157,],[-51,-73,-74,-50,-71,-70,-49,-48,-46,-69,-72,-75,-45,-47,107,-53,107,-94,-93,-92,-91,-90,-89,-88,-87,107,-52,107,107,107,107,107,107,107,107,107,107,107,107,107,-68,-65,-59,-61,-60,107,-64,-56,-63,-58,-57,-62,107,-95,107,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression_statement':([30,60,92,133,148,153,155,159,160,161,162,163,166,168,170,171,172,176,177,],[34,34,133,152,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'return_type_specifier':([0,12,],[1,1,]),'constant':([30,35,56,60,70,71,72,75,76,77,83,84,85,88,89,90,91,92,93,99,100,102,103,104,105,106,107,108,109,110,111,133,148,151,152,153,155,159,160,161,162,163,166,168,170,171,172,176,177,],[42,42,42,42,42,42,42,42,42,42,42,42,126,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,126,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'unary_expression':([30,35,56,60,70,71,72,75,76,77,83,84,88,89,90,91,92,93,99,100,102,103,104,105,106,107,108,109,110,111,133,148,152,153,155,159,160,161,162,163,166,168,170,171,172,176,177,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'argument':([19,26,],[21,31,]),'function_call':([30,35,56,60,70,71,72,75,76,77,83,84,88,89,90,91,92,93,99,100,102,103,104,105,106,107,108,109,110,111,133,148,152,153,155,159,160,161,162,163,166,168,170,171,172,176,177,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'array':([20,30,35,37,39,45,56,60,70,71,72,75,76,77,83,84,85,88,89,90,91,92,93,99,100,102,103,104,105,106,107,108,109,110,111,120,133,148,151,152,153,155,159,160,161,162,163,166,168,170,171,172,176,177,],[24,43,43,66,68,81,43,43,43,43,43,43,43,43,43,43,127,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,81,43,43,127,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'type_specifier':([0,12,19,26,30,60,148,153,155,159,160,161,162,163,166,168,170,171,172,176,177,],[5,5,20,20,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'function_call_list':([85,],[124,]),'program':([0,],[8,]),'array_index':([23,50,67,69,82,128,],[28,28,28,28,28,28,]),'statement':([30,60,148,153,155,159,160,161,162,163,166,168,170,171,172,176,177,],[48,98,154,158,48,48,98,165,167,98,48,48,98,98,175,48,98,]),'argument_list':([19,],[22,]),'function':([0,12,],[9,18,]),'assignment':([30,35,56,60,70,71,72,75,76,77,83,84,88,89,90,91,92,93,99,100,102,103,104,105,106,107,108,109,110,111,133,148,152,153,155,159,160,161,162,163,166,168,170,171,172,176,177,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'function_argument':([85,151,],[125,156,]),'equal_or_initialise':([30,35,45,56,60,70,71,72,75,76,77,83,84,88,89,90,91,92,93,99,100,102,103,104,105,106,107,108,109,110,111,120,133,148,152,153,155,159,160,161,162,163,166,168,170,171,172,176,177,],[53,53,79,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,79,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'declaration':([45,120,],[80,149,]),'function_definition':([0,12,],[10,10,]),'function_declaration':([0,12,],[11,11,]),'function_list':([0,],[12,]),'declaration_list':([45,],[78,]),'statement_list':([30,155,159,166,168,176,],[60,160,163,170,171,177,]),'expression':([30,35,56,60,70,71,72,75,76,77,83,84,88,89,90,91,92,93,99,100,102,103,104,105,106,107,108,109,110,111,133,148,152,153,155,159,160,161,162,163,166,168,170,171,172,176,177,],[61,65,94,61,114,115,116,117,118,119,122,123,129,130,131,132,61,134,136,137,138,139,140,141,142,143,144,145,146,147,61,61,157,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_list','program',1,'p_program','parser.py',103),
  ('function_list -> function_list function','function_list',2,'p_function_list_1','parser.py',107),
  ('function_list -> function','function_list',1,'p_function_list_2','parser.py',112),
  ('function -> function_declaration','function',1,'p_function_1','parser.py',116),
  ('function -> function_definition','function',1,'p_function_2','parser.py',120),
  ('function_declaration -> return_type_specifier IDENTIFIER LEFT_ROUND argument_list RIGHT_ROUND SEMICOLON','function_declaration',6,'p_function_declaration','parser.py',124),
  ('return_type_specifier -> type_specifier','return_type_specifier',1,'p_return_type_specifier_1','parser.py',128),
  ('return_type_specifier -> VOID','return_type_specifier',1,'p_return_type_specifier_2','parser.py',132),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_1','parser.py',136),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_1','parser.py',137),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_1','parser.py',138),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_1','parser.py',139),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_1','parser.py',140),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_1','parser.py',141),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier_1','parser.py',142),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier_1','parser.py',143),
  ('argument_list -> argument','argument_list',1,'p_argument_list_1','parser.py',147),
  ('argument_list -> argument_list COMMA argument','argument_list',3,'p_argument_list_2','parser.py',151),
  ('argument -> type_specifier IDENTIFIER','argument',2,'p_argument_1','parser.py',156),
  ('argument -> type_specifier array','argument',2,'p_argument_2','parser.py',160),
  ('function_definition -> return_type_specifier IDENTIFIER LEFT_ROUND argument_list RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL','function_definition',8,'p_function_definition','parser.py',164),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','parser.py',168),
  ('statement_list -> statement','statement_list',1,'p_statement_list_2','parser.py',173),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL','statement',7,'p_statement_1','parser.py',177),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND statement','statement',5,'p_statement_2','parser.py',181),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND statement ELSE statement','statement',7,'p_statement_3','parser.py',185),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL ELSE statement','statement',9,'p_statement_4','parser.py',189),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND statement ELSE LEFT_CURL statement_list RIGHT_CURL','statement',9,'p_statement_5','parser.py',193),
  ('statement -> IF LEFT_ROUND expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL ELSE LEFT_CURL statement_list RIGHT_CURL','statement',11,'p_statement_6','parser.py',197),
  ('statement -> FOR LEFT_ROUND expression_statement expression_statement expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL','statement',9,'p_statement_7','parser.py',201),
  ('statement -> FOR LEFT_ROUND expression_statement expression_statement expression RIGHT_ROUND statement','statement',7,'p_statement_8','parser.py',205),
  ('statement -> expression_statement','statement',1,'p_statement_9','parser.py',209),
  ('statement -> WHILE LEFT_ROUND expression RIGHT_ROUND LEFT_CURL statement_list RIGHT_CURL','statement',7,'p_statement_10','parser.py',213),
  ('statement -> WHILE LEFT_ROUND expression RIGHT_ROUND statement','statement',5,'p_statement_11','parser.py',217),
  ('statement -> CONTINUE SEMICOLON','statement',2,'p_statement_12','parser.py',221),
  ('statement -> BREAK SEMICOLON','statement',2,'p_statement_12','parser.py',222),
  ('statement -> RETURN SEMICOLON','statement',2,'p_statement_12','parser.py',223),
  ('statement -> RETURN expression SEMICOLON','statement',3,'p_statement_13','parser.py',227),
  ('statement -> type_specifier declaration_list SEMICOLON','statement',3,'p_statement_14','parser.py',231),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_1','parser.py',235),
  ('declaration_list -> declaration_list COMMA declaration','declaration_list',3,'p_declaration_list_2','parser.py',239),
  ('declaration -> IDENTIFIER','declaration',1,'p_declaration_1','parser.py',244),
  ('declaration -> array','declaration',1,'p_declaration_2','parser.py',248),
  ('declaration -> equal_or_initialise','declaration',1,'p_declaration_2','parser.py',249),
  ('constant -> HEX_NUM','constant',1,'p_constant','parser.py',253),
  ('constant -> REAL_NUM','constant',1,'p_constant','parser.py',254),
  ('constant -> INT_NUM','constant',1,'p_constant','parser.py',255),
  ('constant -> CHARACTER','constant',1,'p_constant','parser.py',256),
  ('constant -> STRING','constant',1,'p_constant','parser.py',257),
  ('constant -> EXP_NUM','constant',1,'p_constant','parser.py',258),
  ('array -> IDENTIFIER array_index','array',2,'p_array','parser.py',262),
  ('array_index -> array_index LEFT_SQUARE INT_NUM RIGHT_SQUARE','array_index',4,'p_array_index_1','parser.py',266),
  ('array_index -> LEFT_SQUARE INT_NUM RIGHT_SQUARE','array_index',3,'p_array_index_2','parser.py',271),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement_1','parser.py',275),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement_2','parser.py',279),
  ('expression -> expression PLUS expression','expression',3,'p_expression_1','parser.py',283),
  ('expression -> expression MINUS expression','expression',3,'p_expression_2','parser.py',287),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_3','parser.py',291),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_4','parser.py',295),
  ('expression -> expression L_OP expression','expression',3,'p_expression_5','parser.py',299),
  ('expression -> expression G_OP expression','expression',3,'p_expression_6','parser.py',303),
  ('expression -> expression NE_OP expression','expression',3,'p_expression_7','parser.py',307),
  ('expression -> expression EQ_OP expression','expression',3,'p_expression_8','parser.py',311),
  ('expression -> expression GE_OP expression','expression',3,'p_expression_9','parser.py',315),
  ('expression -> expression LE_OP expression','expression',3,'p_expression_10','parser.py',319),
  ('expression -> expression AND_OP expression','expression',3,'p_expression_11','parser.py',323),
  ('expression -> expression OR_OP expression','expression',3,'p_expression_12','parser.py',327),
  ('expression -> LEFT_ROUND expression RIGHT_ROUND','expression',3,'p_expression_13','parser.py',331),
  ('expression -> IDENTIFIER','expression',1,'p_expression_14','parser.py',335),
  ('expression -> array','expression',1,'p_expression_15','parser.py',339),
  ('expression -> constant','expression',1,'p_expression_15','parser.py',340),
  ('expression -> assignment','expression',1,'p_expression_16','parser.py',344),
  ('expression -> unary_expression','expression',1,'p_expression_16','parser.py',345),
  ('expression -> function_call','expression',1,'p_expression_16','parser.py',346),
  ('assignment -> equal_or_initialise','assignment',1,'p_assignment_1','parser.py',350),
  ('equal_or_initialise -> IDENTIFIER EQUAL expression','equal_or_initialise',3,'p_equal_or_initialise','parser.py',354),
  ('assignment -> array EQUAL expression','assignment',3,'p_assignment_2','parser.py',358),
  ('assignment -> IDENTIFIER ADD_ASSIGN expression','assignment',3,'p_assignment_3','parser.py',362),
  ('assignment -> IDENTIFIER SUB_ASSIGN expression','assignment',3,'p_assignment_4','parser.py',366),
  ('assignment -> IDENTIFIER DIV_ASSIGN expression','assignment',3,'p_assignment_5','parser.py',370),
  ('assignment -> IDENTIFIER MUL_ASSIGN expression','assignment',3,'p_assignment_6','parser.py',374),
  ('assignment -> IDENTIFIER MOD_ASSIGN expression','assignment',3,'p_assignment_7','parser.py',378),
  ('assignment -> array ADD_ASSIGN expression','assignment',3,'p_assignment_8','parser.py',382),
  ('assignment -> array SUB_ASSIGN expression','assignment',3,'p_assignment_9','parser.py',386),
  ('assignment -> array DIV_ASSIGN expression','assignment',3,'p_assignment_10','parser.py',390),
  ('assignment -> array MOD_ASSIGN expression','assignment',3,'p_assignment_11','parser.py',398),
  ('unary_expression -> IDENTIFIER INC_OP','unary_expression',2,'p_unary_expression_1','parser.py',402),
  ('unary_expression -> IDENTIFIER DEC_OP','unary_expression',2,'p_unary_expression_2','parser.py',406),
  ('unary_expression -> array INC_OP','unary_expression',2,'p_unary_expression_3','parser.py',410),
  ('unary_expression -> array DEC_OP','unary_expression',2,'p_unary_expression_4','parser.py',414),
  ('unary_expression -> INC_OP IDENTIFIER','unary_expression',2,'p_unary_expression_5','parser.py',418),
  ('unary_expression -> INC_OP array','unary_expression',2,'p_unary_expression_6','parser.py',422),
  ('unary_expression -> DEC_OP IDENTIFIER','unary_expression',2,'p_unary_expression_7','parser.py',426),
  ('unary_expression -> DEC_OP array','unary_expression',2,'p_unary_expression_8','parser.py',430),
  ('function_call -> IDENTIFIER LEFT_ROUND function_call_list RIGHT_ROUND','function_call',4,'p_function_call','parser.py',434),
  ('function_call_list -> function_argument','function_call_list',1,'p_function_call_list_1','parser.py',438),
  ('function_call_list -> function_call_list COMMA function_argument','function_call_list',3,'p_function_call_list_2','parser.py',442),
  ('function_argument -> IDENTIFIER','function_argument',1,'p_function_argument_1','parser.py',447),
  ('function_argument -> array','function_argument',1,'p_function_argument_2','parser.py',451),
  ('function_argument -> constant','function_argument',1,'p_function_argument_2','parser.py',452),
]
